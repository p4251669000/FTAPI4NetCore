// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Notify {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Notify_GtwEvent__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.GtwEvent, global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder> internal__static_Notify_GtwEvent__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_ProgramStatus__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ProgramStatus, global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder> internal__static_Notify_ProgramStatus__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_ConnectStatus__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ConnectStatus, global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder> internal__static_Notify_ConnectStatus__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_QotRight__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.QotRight, global::Futu.OpenApi.Pb.Notify.QotRight.Builder> internal__static_Notify_QotRight__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_APILevel__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.APILevel, global::Futu.OpenApi.Pb.Notify.APILevel.Builder> internal__static_Notify_APILevel__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_APIQuota__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.APIQuota, global::Futu.OpenApi.Pb.Notify.APIQuota.Builder> internal__static_Notify_APIQuota__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_UsedQuota__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.UsedQuota, global::Futu.OpenApi.Pb.Notify.UsedQuota.Builder> internal__static_Notify_UsedQuota__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.S2C, global::Futu.OpenApi.Pb.Notify.S2C.Builder> internal__static_Notify_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Notify_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.Response, global::Futu.OpenApi.Pb.Notify.Response.Builder> internal__static_Notify_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Notify() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxOb3RpZnkucHJvdG8SBk5vdGlmeRoMQ29tbW9uLnByb3RvIjwKCEd0d0V2", 
            "ZW50EhwKCWV2ZW50VHlwZRgBIAIoBVIJZXZlbnRUeXBlEhIKBGRlc2MYAiAC", 
            "KAlSBGRlc2MiTAoNUHJvZ3JhbVN0YXR1cxI7Cg1wcm9ncmFtU3RhdHVzGAEg", 
            "AigLMhUuQ29tbW9uLlByb2dyYW1TdGF0dXNSDXByb2dyYW1TdGF0dXMiTwoN", 
            "Q29ubmVjdFN0YXR1cxIeCgpxb3RMb2dpbmVkGAEgAigIUgpxb3RMb2dpbmVk", 
            "Eh4KCnRyZExvZ2luZWQYAiACKAhSCnRyZExvZ2luZWQiugYKCFFvdFJpZ2h0", 
            "Eh4KCmhrUW90UmlnaHQYBCACKAVSCmhrUW90UmlnaHQSHgoKdXNRb3RSaWdo", 
            "dBgFIAIoBVIKdXNRb3RSaWdodBIeCgpjblFvdFJpZ2h0GAYgAigFUgpjblFv", 
            "dFJpZ2h0EioKEGhrT3B0aW9uUW90UmlnaHQYByABKAVSEGhrT3B0aW9uUW90", 
            "UmlnaHQSMAoTaGFzVVNPcHRpb25Rb3RSaWdodBgIIAEoCFITaGFzVVNPcHRp", 
            "b25Rb3RSaWdodBIqChBoa0Z1dHVyZVFvdFJpZ2h0GAkgASgFUhBoa0Z1dHVy", 
            "ZVFvdFJpZ2h0EioKEHVzRnV0dXJlUW90UmlnaHQYCiABKAVSEHVzRnV0dXJl", 
            "UW90UmlnaHQSKgoQdXNPcHRpb25Rb3RSaWdodBgLIAEoBVIQdXNPcHRpb25R", 
            "b3RSaWdodBIoCg91c0luZGV4UW90UmlnaHQYDCABKAVSD3VzSW5kZXhRb3RS", 
            "aWdodBIkCg11c090Y1FvdFJpZ2h0GA0gASgFUg11c090Y1FvdFJpZ2h0EioK", 
            "EHNnRnV0dXJlUW90UmlnaHQYDiABKAVSEHNnRnV0dXJlUW90UmlnaHQSKgoQ", 
            "anBGdXR1cmVRb3RSaWdodBgPIAEoBVIQanBGdXR1cmVRb3RSaWdodBIwChN1", 
            "c0NNRUZ1dHVyZVFvdFJpZ2h0GBAgASgFUhN1c0NNRUZ1dHVyZVFvdFJpZ2h0", 
            "EjIKFHVzQ0JPVEZ1dHVyZVFvdFJpZ2h0GBEgASgFUhR1c0NCT1RGdXR1cmVR", 
            "b3RSaWdodBI0ChV1c05ZTUVYRnV0dXJlUW90UmlnaHQYEiABKAVSFXVzTllN", 
            "RVhGdXR1cmVRb3RSaWdodBI0ChV1c0NPTUVYRnV0dXJlUW90UmlnaHQYEyAB", 
            "KAVSFXVzQ09NRVhGdXR1cmVRb3RSaWdodBIyChR1c0NCT0VGdXR1cmVRb3RS", 
            "aWdodBgUIAEoBVIUdXNDQk9FRnV0dXJlUW90UmlnaHQSHgoKc2hRb3RSaWdo", 
            "dBgVIAEoBVIKc2hRb3RSaWdodBIeCgpzelFvdFJpZ2h0GBYgASgFUgpzelFv", 
            "dFJpZ2h0IiYKCEFQSUxldmVsEhoKCGFwaUxldmVsGAMgAigJUghhcGlMZXZl", 
            "bCJOCghBUElRdW90YRIaCghzdWJRdW90YRgBIAIoBVIIc3ViUXVvdGESJgoO", 
            "aGlzdG9yeUtMUXVvdGEYAiACKAVSDmhpc3RvcnlLTFF1b3RhIlcKCVVzZWRR", 
            "dW90YRIiCgx1c2VkU3ViUXVvdGEYASABKAVSDHVzZWRTdWJRdW90YRImCg51", 
            "c2VkS0xpbmVRdW90YRgCIAEoBVIOdXNlZEtMaW5lUXVvdGEi9gIKA1MyQxIS", 
            "CgR0eXBlGAEgAigFUgR0eXBlEiYKBWV2ZW50GAIgASgLMhAuTm90aWZ5Lkd0", 
            "d0V2ZW50UgVldmVudBI7Cg1wcm9ncmFtU3RhdHVzGAMgASgLMhUuTm90aWZ5", 
            "LlByb2dyYW1TdGF0dXNSDXByb2dyYW1TdGF0dXMSOwoNY29ubmVjdFN0YXR1", 
            "cxgEIAEoCzIVLk5vdGlmeS5Db25uZWN0U3RhdHVzUg1jb25uZWN0U3RhdHVz", 
            "EiwKCHFvdFJpZ2h0GAUgASgLMhAuTm90aWZ5LlFvdFJpZ2h0Ughxb3RSaWdo", 
            "dBIsCghhcGlMZXZlbBgGIAEoCzIQLk5vdGlmeS5BUElMZXZlbFIIYXBpTGV2", 
            "ZWwSLAoIYXBpUXVvdGEYByABKAsyEC5Ob3RpZnkuQVBJUXVvdGFSCGFwaVF1", 
            "b3RhEi8KCXVzZWRRdW90YRgIIAEoCzIRLk5vdGlmeS5Vc2VkUXVvdGFSCXVz", 
            "ZWRRdW90YSJ7CghSZXNwb25zZRIeCgdyZXRUeXBlGAEgAigFOgQtNDAwUgdy", 
            "ZXRUeXBlEhYKBnJldE1zZxgCIAEoCVIGcmV0TXNnEhgKB2VyckNvZGUYAyAB", 
            "KAVSB2VyckNvZGUSHQoDczJjGAQgASgLMgsuTm90aWZ5LlMyQ1IDczJjKtgB", 
            "CgpOb3RpZnlUeXBlEhMKD05vdGlmeVR5cGVfTm9uZRAAEhcKE05vdGlmeVR5", 
            "cGVfR3R3RXZlbnQQARIcChhOb3RpZnlUeXBlX1Byb2dyYW1TdGF0dXMQAhIZ", 
            "ChVOb3RpZnlUeXBlX0Nvbm5TdGF0dXMQAxIXChNOb3RpZnlUeXBlX1FvdFJp", 
            "Z2h0EAQSFwoTTm90aWZ5VHlwZV9BUElMZXZlbBAFEhcKE05vdGlmeVR5cGVf", 
            "QVBJUXVvdGEQBhIYChROb3RpZnlUeXBlX1VzZWRRdW90YRAHKpsECgxHdHdF", 
            "dmVudFR5cGUSFQoRR3R3RXZlbnRUeXBlX05vbmUQABIjCh9HdHdFdmVudFR5", 
            "cGVfTG9jYWxDZmdMb2FkRmFpbGVkEAESIAocR3R3RXZlbnRUeXBlX0FQSVN2", 
            "clJ1bkZhaWxlZBACEhwKGEd0d0V2ZW50VHlwZV9Gb3JjZVVwZGF0ZRADEhwK", 
            "GEd0d0V2ZW50VHlwZV9Mb2dpbkZhaWxlZBAEEiIKHkd0d0V2ZW50VHlwZV9V", 
            "bkFncmVlRGlzY2xhaW1lchAFEh4KGkd0d0V2ZW50VHlwZV9OZXRDZmdNaXNz", 
            "aW5nEAYSGgoWR3R3RXZlbnRUeXBlX0tpY2tlZE91dBAHEiAKHEd0d0V2ZW50", 
            "VHlwZV9Mb2dpblB3ZENoYW5nZWQQCBIZChVHdHdFdmVudFR5cGVfQmFuTG9n", 
            "aW4QCRIiCh5HdHdFdmVudFR5cGVfTmVlZFBpY1ZlcmlmeUNvZGUQChIkCiBH", 
            "dHdFdmVudFR5cGVfTmVlZFBob25lVmVyaWZ5Q29kZRALEiAKHEd0d0V2ZW50", 
            "VHlwZV9BcHBEYXRhTm90RXhpc3QQDBIjCh9HdHdFdmVudFR5cGVfTmVzc2Fy", 
            "eURhdGFNaXNzaW5nEA0SIAocR3R3RXZlbnRUeXBlX1RyYWRlUHdkQ2hhbmdl", 
            "ZBAOEiEKHUd0d0V2ZW50VHlwZV9FbmFibGVEZXZpY2VMb2NrEA9CPQoTY29t", 
            "LmZ1dHUub3BlbmFwaS5wYlomZ2l0aHViLmNvbS9mdXR1b3Blbi9mdGFwaTRn", 
          "by9wYi9ub3RpZnk="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Notify_GtwEvent__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Notify_GtwEvent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.GtwEvent, global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder>(internal__static_Notify_GtwEvent__Descriptor,
                new string[] { "EventType", "Desc", });
        internal__static_Notify_ProgramStatus__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Notify_ProgramStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ProgramStatus, global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder>(internal__static_Notify_ProgramStatus__Descriptor,
                new string[] { "ProgramStatus_", });
        internal__static_Notify_ConnectStatus__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Notify_ConnectStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.ConnectStatus, global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder>(internal__static_Notify_ConnectStatus__Descriptor,
                new string[] { "QotLogined", "TrdLogined", });
        internal__static_Notify_QotRight__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Notify_QotRight__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.QotRight, global::Futu.OpenApi.Pb.Notify.QotRight.Builder>(internal__static_Notify_QotRight__Descriptor,
                new string[] { "HkQotRight", "UsQotRight", "CnQotRight", "HkOptionQotRight", "HasUSOptionQotRight", "HkFutureQotRight", "UsFutureQotRight", "UsOptionQotRight", "UsIndexQotRight", "UsOtcQotRight", "SgFutureQotRight", "JpFutureQotRight", "UsCMEFutureQotRight", "UsCBOTFutureQotRight", "UsNYMEXFutureQotRight", "UsCOMEXFutureQotRight", "UsCBOEFutureQotRight", "ShQotRight", "SzQotRight", });
        internal__static_Notify_APILevel__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Notify_APILevel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.APILevel, global::Futu.OpenApi.Pb.Notify.APILevel.Builder>(internal__static_Notify_APILevel__Descriptor,
                new string[] { "ApiLevel", });
        internal__static_Notify_APIQuota__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Notify_APIQuota__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.APIQuota, global::Futu.OpenApi.Pb.Notify.APIQuota.Builder>(internal__static_Notify_APIQuota__Descriptor,
                new string[] { "SubQuota", "HistoryKLQuota", });
        internal__static_Notify_UsedQuota__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Notify_UsedQuota__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.UsedQuota, global::Futu.OpenApi.Pb.Notify.UsedQuota.Builder>(internal__static_Notify_UsedQuota__Descriptor,
                new string[] { "UsedSubQuota", "UsedKLineQuota", });
        internal__static_Notify_S2C__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Notify_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.S2C, global::Futu.OpenApi.Pb.Notify.S2C.Builder>(internal__static_Notify_S2C__Descriptor,
                new string[] { "Type", "Event", "ProgramStatus", "ConnectStatus", "QotRight", "ApiLevel", "ApiQuota", "UsedQuota", });
        internal__static_Notify_Response__Descriptor = Descriptor.MessageTypes[8];
        internal__static_Notify_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.Notify.Response, global::Futu.OpenApi.Pb.Notify.Response.Builder>(internal__static_Notify_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Enums
    public enum NotifyType {
      NotifyType_None = 0,
      NotifyType_GtwEvent = 1,
      NotifyType_ProgramStatus = 2,
      NotifyType_ConnStatus = 3,
      NotifyType_QotRight = 4,
      NotifyType_APILevel = 5,
      NotifyType_APIQuota = 6,
      NotifyType_UsedQuota = 7,
    }
    
    public enum GtwEventType {
      GtwEventType_None = 0,
      GtwEventType_LocalCfgLoadFailed = 1,
      GtwEventType_APISvrRunFailed = 2,
      GtwEventType_ForceUpdate = 3,
      GtwEventType_LoginFailed = 4,
      GtwEventType_UnAgreeDisclaimer = 5,
      GtwEventType_NetCfgMissing = 6,
      GtwEventType_KickedOut = 7,
      GtwEventType_LoginPwdChanged = 8,
      GtwEventType_BanLogin = 9,
      GtwEventType_NeedPicVerifyCode = 10,
      GtwEventType_NeedPhoneVerifyCode = 11,
      GtwEventType_AppDataNotExist = 12,
      GtwEventType_NessaryDataMissing = 13,
      GtwEventType_TradePwdChanged = 14,
      GtwEventType_EnableDeviceLock = 15,
    }
    
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GtwEvent : pb::GeneratedMessage<GtwEvent, GtwEvent.Builder> {
      private GtwEvent() { }
      private static readonly GtwEvent defaultInstance = new GtwEvent().MakeReadOnly();
      private static readonly string[] _gtwEventFieldNames = new string[] { "desc", "eventType" };
      private static readonly uint[] _gtwEventFieldTags = new uint[] { 18, 8 };
      public static GtwEvent DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override GtwEvent DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override GtwEvent ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_GtwEvent__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<GtwEvent, GtwEvent.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_GtwEvent__FieldAccessorTable; }
      }
      
      public const int EventTypeFieldNumber = 1;
      private bool hasEventType;
      private int eventType_;
      public bool HasEventType {
        get { return hasEventType; }
      }
      public int EventType {
        get { return eventType_; }
      }
      
      public const int DescFieldNumber = 2;
      private bool hasDesc;
      private string desc_ = "";
      public bool HasDesc {
        get { return hasDesc; }
      }
      public string Desc {
        get { return desc_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasEventType) return false;
          if (!hasDesc) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _gtwEventFieldNames;
        if (hasEventType) {
          output.WriteInt32(1, field_names[1], EventType);
        }
        if (hasDesc) {
          output.WriteString(2, field_names[0], Desc);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEventType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, EventType);
        }
        if (hasDesc) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Desc);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static GtwEvent ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static GtwEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static GtwEvent ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static GtwEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static GtwEvent ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static GtwEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static GtwEvent ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static GtwEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static GtwEvent ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static GtwEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private GtwEvent MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(GtwEvent prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<GtwEvent, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(GtwEvent cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private GtwEvent result;
        
        private GtwEvent PrepareBuilder() {
          if (resultIsReadOnly) {
            GtwEvent original = result;
            result = new GtwEvent();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override GtwEvent MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.GtwEvent.Descriptor; }
        }
        
        public override GtwEvent DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance; }
        }
        
        public override GtwEvent BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is GtwEvent) {
            return MergeFrom((GtwEvent) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(GtwEvent other) {
          if (other == global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasEventType) {
            EventType = other.EventType;
          }
          if (other.HasDesc) {
            Desc = other.Desc;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_gtwEventFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _gtwEventFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasEventType = input.ReadInt32(ref result.eventType_);
                break;
              }
              case 18: {
                result.hasDesc = input.ReadString(ref result.desc_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasEventType {
          get { return result.hasEventType; }
        }
        public int EventType {
          get { return result.EventType; }
          set { SetEventType(value); }
        }
        public Builder SetEventType(int value) {
          PrepareBuilder();
          result.hasEventType = true;
          result.eventType_ = value;
          return this;
        }
        public Builder ClearEventType() {
          PrepareBuilder();
          result.hasEventType = false;
          result.eventType_ = 0;
          return this;
        }
        
        public bool HasDesc {
          get { return result.hasDesc; }
        }
        public string Desc {
          get { return result.Desc; }
          set { SetDesc(value); }
        }
        public Builder SetDesc(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasDesc = true;
          result.desc_ = value;
          return this;
        }
        public Builder ClearDesc() {
          PrepareBuilder();
          result.hasDesc = false;
          result.desc_ = "";
          return this;
        }
      }
      static GtwEvent() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ProgramStatus : pb::GeneratedMessage<ProgramStatus, ProgramStatus.Builder> {
      private ProgramStatus() { }
      private static readonly ProgramStatus defaultInstance = new ProgramStatus().MakeReadOnly();
      private static readonly string[] _programStatusFieldNames = new string[] { "programStatus" };
      private static readonly uint[] _programStatusFieldTags = new uint[] { 10 };
      public static ProgramStatus DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ProgramStatus DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ProgramStatus ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ProgramStatus__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ProgramStatus, ProgramStatus.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ProgramStatus__FieldAccessorTable; }
      }
      
      public const int ProgramStatus_FieldNumber = 1;
      private bool hasProgramStatus_;
      private global::Futu.OpenApi.Pb.Common.ProgramStatus programStatus_;
      public bool HasProgramStatus_ {
        get { return hasProgramStatus_; }
      }
      public global::Futu.OpenApi.Pb.Common.ProgramStatus ProgramStatus_ {
        get { return programStatus_ ?? global::Futu.OpenApi.Pb.Common.ProgramStatus.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasProgramStatus_) return false;
          if (!ProgramStatus_.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _programStatusFieldNames;
        if (hasProgramStatus_) {
          output.WriteMessage(1, field_names[0], ProgramStatus_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgramStatus_) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ProgramStatus_);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static ProgramStatus ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ProgramStatus ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ProgramStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ProgramStatus ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ProgramStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ProgramStatus MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ProgramStatus prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ProgramStatus, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ProgramStatus cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ProgramStatus result;
        
        private ProgramStatus PrepareBuilder() {
          if (resultIsReadOnly) {
            ProgramStatus original = result;
            result = new ProgramStatus();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ProgramStatus MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.ProgramStatus.Descriptor; }
        }
        
        public override ProgramStatus DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance; }
        }
        
        public override ProgramStatus BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ProgramStatus) {
            return MergeFrom((ProgramStatus) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ProgramStatus other) {
          if (other == global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasProgramStatus_) {
            MergeProgramStatus_(other.ProgramStatus_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_programStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _programStatusFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.Common.ProgramStatus.Builder subBuilder = global::Futu.OpenApi.Pb.Common.ProgramStatus.CreateBuilder();
                if (result.hasProgramStatus_) {
                  subBuilder.MergeFrom(ProgramStatus_);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ProgramStatus_ = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasProgramStatus_ {
         get { return result.hasProgramStatus_; }
        }
        public global::Futu.OpenApi.Pb.Common.ProgramStatus ProgramStatus_ {
          get { return result.ProgramStatus_; }
          set { SetProgramStatus_(value); }
        }
        public Builder SetProgramStatus_(global::Futu.OpenApi.Pb.Common.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasProgramStatus_ = true;
          result.programStatus_ = value;
          return this;
        }
        public Builder SetProgramStatus_(global::Futu.OpenApi.Pb.Common.ProgramStatus.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasProgramStatus_ = true;
          result.programStatus_ = builderForValue.Build();
          return this;
        }
        public Builder MergeProgramStatus_(global::Futu.OpenApi.Pb.Common.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasProgramStatus_ &&
              result.programStatus_ != global::Futu.OpenApi.Pb.Common.ProgramStatus.DefaultInstance) {
              result.programStatus_ = global::Futu.OpenApi.Pb.Common.ProgramStatus.CreateBuilder(result.programStatus_).MergeFrom(value).BuildPartial();
          } else {
            result.programStatus_ = value;
          }
          result.hasProgramStatus_ = true;
          return this;
        }
        public Builder ClearProgramStatus_() {
          PrepareBuilder();
          result.hasProgramStatus_ = false;
          result.programStatus_ = null;
          return this;
        }
      }
      static ProgramStatus() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ConnectStatus : pb::GeneratedMessage<ConnectStatus, ConnectStatus.Builder> {
      private ConnectStatus() { }
      private static readonly ConnectStatus defaultInstance = new ConnectStatus().MakeReadOnly();
      private static readonly string[] _connectStatusFieldNames = new string[] { "qotLogined", "trdLogined" };
      private static readonly uint[] _connectStatusFieldTags = new uint[] { 8, 16 };
      public static ConnectStatus DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ConnectStatus DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ConnectStatus ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ConnectStatus__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ConnectStatus, ConnectStatus.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_ConnectStatus__FieldAccessorTable; }
      }
      
      public const int QotLoginedFieldNumber = 1;
      private bool hasQotLogined;
      private bool qotLogined_;
      public bool HasQotLogined {
        get { return hasQotLogined; }
      }
      public bool QotLogined {
        get { return qotLogined_; }
      }
      
      public const int TrdLoginedFieldNumber = 2;
      private bool hasTrdLogined;
      private bool trdLogined_;
      public bool HasTrdLogined {
        get { return hasTrdLogined; }
      }
      public bool TrdLogined {
        get { return trdLogined_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasQotLogined) return false;
          if (!hasTrdLogined) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _connectStatusFieldNames;
        if (hasQotLogined) {
          output.WriteBool(1, field_names[0], QotLogined);
        }
        if (hasTrdLogined) {
          output.WriteBool(2, field_names[1], TrdLogined);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasQotLogined) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, QotLogined);
        }
        if (hasTrdLogined) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, TrdLogined);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static ConnectStatus ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ConnectStatus ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ConnectStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ConnectStatus ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ConnectStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ConnectStatus MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ConnectStatus prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ConnectStatus, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ConnectStatus cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ConnectStatus result;
        
        private ConnectStatus PrepareBuilder() {
          if (resultIsReadOnly) {
            ConnectStatus original = result;
            result = new ConnectStatus();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ConnectStatus MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.ConnectStatus.Descriptor; }
        }
        
        public override ConnectStatus DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance; }
        }
        
        public override ConnectStatus BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ConnectStatus) {
            return MergeFrom((ConnectStatus) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ConnectStatus other) {
          if (other == global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasQotLogined) {
            QotLogined = other.QotLogined;
          }
          if (other.HasTrdLogined) {
            TrdLogined = other.TrdLogined;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_connectStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _connectStatusFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasQotLogined = input.ReadBool(ref result.qotLogined_);
                break;
              }
              case 16: {
                result.hasTrdLogined = input.ReadBool(ref result.trdLogined_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasQotLogined {
          get { return result.hasQotLogined; }
        }
        public bool QotLogined {
          get { return result.QotLogined; }
          set { SetQotLogined(value); }
        }
        public Builder SetQotLogined(bool value) {
          PrepareBuilder();
          result.hasQotLogined = true;
          result.qotLogined_ = value;
          return this;
        }
        public Builder ClearQotLogined() {
          PrepareBuilder();
          result.hasQotLogined = false;
          result.qotLogined_ = false;
          return this;
        }
        
        public bool HasTrdLogined {
          get { return result.hasTrdLogined; }
        }
        public bool TrdLogined {
          get { return result.TrdLogined; }
          set { SetTrdLogined(value); }
        }
        public Builder SetTrdLogined(bool value) {
          PrepareBuilder();
          result.hasTrdLogined = true;
          result.trdLogined_ = value;
          return this;
        }
        public Builder ClearTrdLogined() {
          PrepareBuilder();
          result.hasTrdLogined = false;
          result.trdLogined_ = false;
          return this;
        }
      }
      static ConnectStatus() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class QotRight : pb::GeneratedMessage<QotRight, QotRight.Builder> {
      private QotRight() { }
      private static readonly QotRight defaultInstance = new QotRight().MakeReadOnly();
      private static readonly string[] _qotRightFieldNames = new string[] { "cnQotRight", "hasUSOptionQotRight", "hkFutureQotRight", "hkOptionQotRight", "hkQotRight", "jpFutureQotRight", "sgFutureQotRight", "shQotRight", "szQotRight", "usCBOEFutureQotRight", "usCBOTFutureQotRight", "usCMEFutureQotRight", "usCOMEXFutureQotRight", "usFutureQotRight", "usIndexQotRight", "usNYMEXFutureQotRight", "usOptionQotRight", "usOtcQotRight", "usQotRight" };
      private static readonly uint[] _qotRightFieldTags = new uint[] { 48, 64, 72, 56, 32, 120, 112, 168, 176, 160, 136, 128, 152, 80, 96, 144, 88, 104, 40 };
      public static QotRight DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override QotRight DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override QotRight ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_QotRight__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<QotRight, QotRight.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_QotRight__FieldAccessorTable; }
      }
      
      public const int HkQotRightFieldNumber = 4;
      private bool hasHkQotRight;
      private int hkQotRight_;
      public bool HasHkQotRight {
        get { return hasHkQotRight; }
      }
      public int HkQotRight {
        get { return hkQotRight_; }
      }
      
      public const int UsQotRightFieldNumber = 5;
      private bool hasUsQotRight;
      private int usQotRight_;
      public bool HasUsQotRight {
        get { return hasUsQotRight; }
      }
      public int UsQotRight {
        get { return usQotRight_; }
      }
      
      public const int CnQotRightFieldNumber = 6;
      private bool hasCnQotRight;
      private int cnQotRight_;
      public bool HasCnQotRight {
        get { return hasCnQotRight; }
      }
      public int CnQotRight {
        get { return cnQotRight_; }
      }
      
      public const int HkOptionQotRightFieldNumber = 7;
      private bool hasHkOptionQotRight;
      private int hkOptionQotRight_;
      public bool HasHkOptionQotRight {
        get { return hasHkOptionQotRight; }
      }
      public int HkOptionQotRight {
        get { return hkOptionQotRight_; }
      }
      
      public const int HasUSOptionQotRightFieldNumber = 8;
      private bool hasHasUSOptionQotRight;
      private bool hasUSOptionQotRight_;
      public bool HasHasUSOptionQotRight {
        get { return hasHasUSOptionQotRight; }
      }
      public bool HasUSOptionQotRight {
        get { return hasUSOptionQotRight_; }
      }
      
      public const int HkFutureQotRightFieldNumber = 9;
      private bool hasHkFutureQotRight;
      private int hkFutureQotRight_;
      public bool HasHkFutureQotRight {
        get { return hasHkFutureQotRight; }
      }
      public int HkFutureQotRight {
        get { return hkFutureQotRight_; }
      }
      
      public const int UsFutureQotRightFieldNumber = 10;
      private bool hasUsFutureQotRight;
      private int usFutureQotRight_;
      public bool HasUsFutureQotRight {
        get { return hasUsFutureQotRight; }
      }
      public int UsFutureQotRight {
        get { return usFutureQotRight_; }
      }
      
      public const int UsOptionQotRightFieldNumber = 11;
      private bool hasUsOptionQotRight;
      private int usOptionQotRight_;
      public bool HasUsOptionQotRight {
        get { return hasUsOptionQotRight; }
      }
      public int UsOptionQotRight {
        get { return usOptionQotRight_; }
      }
      
      public const int UsIndexQotRightFieldNumber = 12;
      private bool hasUsIndexQotRight;
      private int usIndexQotRight_;
      public bool HasUsIndexQotRight {
        get { return hasUsIndexQotRight; }
      }
      public int UsIndexQotRight {
        get { return usIndexQotRight_; }
      }
      
      public const int UsOtcQotRightFieldNumber = 13;
      private bool hasUsOtcQotRight;
      private int usOtcQotRight_;
      public bool HasUsOtcQotRight {
        get { return hasUsOtcQotRight; }
      }
      public int UsOtcQotRight {
        get { return usOtcQotRight_; }
      }
      
      public const int SgFutureQotRightFieldNumber = 14;
      private bool hasSgFutureQotRight;
      private int sgFutureQotRight_;
      public bool HasSgFutureQotRight {
        get { return hasSgFutureQotRight; }
      }
      public int SgFutureQotRight {
        get { return sgFutureQotRight_; }
      }
      
      public const int JpFutureQotRightFieldNumber = 15;
      private bool hasJpFutureQotRight;
      private int jpFutureQotRight_;
      public bool HasJpFutureQotRight {
        get { return hasJpFutureQotRight; }
      }
      public int JpFutureQotRight {
        get { return jpFutureQotRight_; }
      }
      
      public const int UsCMEFutureQotRightFieldNumber = 16;
      private bool hasUsCMEFutureQotRight;
      private int usCMEFutureQotRight_;
      public bool HasUsCMEFutureQotRight {
        get { return hasUsCMEFutureQotRight; }
      }
      public int UsCMEFutureQotRight {
        get { return usCMEFutureQotRight_; }
      }
      
      public const int UsCBOTFutureQotRightFieldNumber = 17;
      private bool hasUsCBOTFutureQotRight;
      private int usCBOTFutureQotRight_;
      public bool HasUsCBOTFutureQotRight {
        get { return hasUsCBOTFutureQotRight; }
      }
      public int UsCBOTFutureQotRight {
        get { return usCBOTFutureQotRight_; }
      }
      
      public const int UsNYMEXFutureQotRightFieldNumber = 18;
      private bool hasUsNYMEXFutureQotRight;
      private int usNYMEXFutureQotRight_;
      public bool HasUsNYMEXFutureQotRight {
        get { return hasUsNYMEXFutureQotRight; }
      }
      public int UsNYMEXFutureQotRight {
        get { return usNYMEXFutureQotRight_; }
      }
      
      public const int UsCOMEXFutureQotRightFieldNumber = 19;
      private bool hasUsCOMEXFutureQotRight;
      private int usCOMEXFutureQotRight_;
      public bool HasUsCOMEXFutureQotRight {
        get { return hasUsCOMEXFutureQotRight; }
      }
      public int UsCOMEXFutureQotRight {
        get { return usCOMEXFutureQotRight_; }
      }
      
      public const int UsCBOEFutureQotRightFieldNumber = 20;
      private bool hasUsCBOEFutureQotRight;
      private int usCBOEFutureQotRight_;
      public bool HasUsCBOEFutureQotRight {
        get { return hasUsCBOEFutureQotRight; }
      }
      public int UsCBOEFutureQotRight {
        get { return usCBOEFutureQotRight_; }
      }
      
      public const int ShQotRightFieldNumber = 21;
      private bool hasShQotRight;
      private int shQotRight_;
      public bool HasShQotRight {
        get { return hasShQotRight; }
      }
      public int ShQotRight {
        get { return shQotRight_; }
      }
      
      public const int SzQotRightFieldNumber = 22;
      private bool hasSzQotRight;
      private int szQotRight_;
      public bool HasSzQotRight {
        get { return hasSzQotRight; }
      }
      public int SzQotRight {
        get { return szQotRight_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasHkQotRight) return false;
          if (!hasUsQotRight) return false;
          if (!hasCnQotRight) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _qotRightFieldNames;
        if (hasHkQotRight) {
          output.WriteInt32(4, field_names[4], HkQotRight);
        }
        if (hasUsQotRight) {
          output.WriteInt32(5, field_names[18], UsQotRight);
        }
        if (hasCnQotRight) {
          output.WriteInt32(6, field_names[0], CnQotRight);
        }
        if (hasHkOptionQotRight) {
          output.WriteInt32(7, field_names[3], HkOptionQotRight);
        }
        if (hasHasUSOptionQotRight) {
          output.WriteBool(8, field_names[1], HasUSOptionQotRight);
        }
        if (hasHkFutureQotRight) {
          output.WriteInt32(9, field_names[2], HkFutureQotRight);
        }
        if (hasUsFutureQotRight) {
          output.WriteInt32(10, field_names[13], UsFutureQotRight);
        }
        if (hasUsOptionQotRight) {
          output.WriteInt32(11, field_names[16], UsOptionQotRight);
        }
        if (hasUsIndexQotRight) {
          output.WriteInt32(12, field_names[14], UsIndexQotRight);
        }
        if (hasUsOtcQotRight) {
          output.WriteInt32(13, field_names[17], UsOtcQotRight);
        }
        if (hasSgFutureQotRight) {
          output.WriteInt32(14, field_names[6], SgFutureQotRight);
        }
        if (hasJpFutureQotRight) {
          output.WriteInt32(15, field_names[5], JpFutureQotRight);
        }
        if (hasUsCMEFutureQotRight) {
          output.WriteInt32(16, field_names[11], UsCMEFutureQotRight);
        }
        if (hasUsCBOTFutureQotRight) {
          output.WriteInt32(17, field_names[10], UsCBOTFutureQotRight);
        }
        if (hasUsNYMEXFutureQotRight) {
          output.WriteInt32(18, field_names[15], UsNYMEXFutureQotRight);
        }
        if (hasUsCOMEXFutureQotRight) {
          output.WriteInt32(19, field_names[12], UsCOMEXFutureQotRight);
        }
        if (hasUsCBOEFutureQotRight) {
          output.WriteInt32(20, field_names[9], UsCBOEFutureQotRight);
        }
        if (hasShQotRight) {
          output.WriteInt32(21, field_names[7], ShQotRight);
        }
        if (hasSzQotRight) {
          output.WriteInt32(22, field_names[8], SzQotRight);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHkQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, HkQotRight);
        }
        if (hasUsQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, UsQotRight);
        }
        if (hasCnQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, CnQotRight);
        }
        if (hasHkOptionQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, HkOptionQotRight);
        }
        if (hasHasUSOptionQotRight) {
          size += pb::CodedOutputStream.ComputeBoolSize(8, HasUSOptionQotRight);
        }
        if (hasHkFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, HkFutureQotRight);
        }
        if (hasUsFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, UsFutureQotRight);
        }
        if (hasUsOptionQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, UsOptionQotRight);
        }
        if (hasUsIndexQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, UsIndexQotRight);
        }
        if (hasUsOtcQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(13, UsOtcQotRight);
        }
        if (hasSgFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, SgFutureQotRight);
        }
        if (hasJpFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(15, JpFutureQotRight);
        }
        if (hasUsCMEFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(16, UsCMEFutureQotRight);
        }
        if (hasUsCBOTFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(17, UsCBOTFutureQotRight);
        }
        if (hasUsNYMEXFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(18, UsNYMEXFutureQotRight);
        }
        if (hasUsCOMEXFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(19, UsCOMEXFutureQotRight);
        }
        if (hasUsCBOEFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(20, UsCBOEFutureQotRight);
        }
        if (hasShQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(21, ShQotRight);
        }
        if (hasSzQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(22, SzQotRight);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static QotRight ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static QotRight ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static QotRight ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static QotRight ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static QotRight ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static QotRight ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static QotRight ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static QotRight ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static QotRight ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static QotRight ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private QotRight MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(QotRight prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<QotRight, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(QotRight cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private QotRight result;
        
        private QotRight PrepareBuilder() {
          if (resultIsReadOnly) {
            QotRight original = result;
            result = new QotRight();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override QotRight MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.QotRight.Descriptor; }
        }
        
        public override QotRight DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance; }
        }
        
        public override QotRight BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is QotRight) {
            return MergeFrom((QotRight) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(QotRight other) {
          if (other == global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasHkQotRight) {
            HkQotRight = other.HkQotRight;
          }
          if (other.HasUsQotRight) {
            UsQotRight = other.UsQotRight;
          }
          if (other.HasCnQotRight) {
            CnQotRight = other.CnQotRight;
          }
          if (other.HasHkOptionQotRight) {
            HkOptionQotRight = other.HkOptionQotRight;
          }
          if (other.HasHasUSOptionQotRight) {
            HasUSOptionQotRight = other.HasUSOptionQotRight;
          }
          if (other.HasHkFutureQotRight) {
            HkFutureQotRight = other.HkFutureQotRight;
          }
          if (other.HasUsFutureQotRight) {
            UsFutureQotRight = other.UsFutureQotRight;
          }
          if (other.HasUsOptionQotRight) {
            UsOptionQotRight = other.UsOptionQotRight;
          }
          if (other.HasUsIndexQotRight) {
            UsIndexQotRight = other.UsIndexQotRight;
          }
          if (other.HasUsOtcQotRight) {
            UsOtcQotRight = other.UsOtcQotRight;
          }
          if (other.HasSgFutureQotRight) {
            SgFutureQotRight = other.SgFutureQotRight;
          }
          if (other.HasJpFutureQotRight) {
            JpFutureQotRight = other.JpFutureQotRight;
          }
          if (other.HasUsCMEFutureQotRight) {
            UsCMEFutureQotRight = other.UsCMEFutureQotRight;
          }
          if (other.HasUsCBOTFutureQotRight) {
            UsCBOTFutureQotRight = other.UsCBOTFutureQotRight;
          }
          if (other.HasUsNYMEXFutureQotRight) {
            UsNYMEXFutureQotRight = other.UsNYMEXFutureQotRight;
          }
          if (other.HasUsCOMEXFutureQotRight) {
            UsCOMEXFutureQotRight = other.UsCOMEXFutureQotRight;
          }
          if (other.HasUsCBOEFutureQotRight) {
            UsCBOEFutureQotRight = other.UsCBOEFutureQotRight;
          }
          if (other.HasShQotRight) {
            ShQotRight = other.ShQotRight;
          }
          if (other.HasSzQotRight) {
            SzQotRight = other.SzQotRight;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_qotRightFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _qotRightFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 32: {
                result.hasHkQotRight = input.ReadInt32(ref result.hkQotRight_);
                break;
              }
              case 40: {
                result.hasUsQotRight = input.ReadInt32(ref result.usQotRight_);
                break;
              }
              case 48: {
                result.hasCnQotRight = input.ReadInt32(ref result.cnQotRight_);
                break;
              }
              case 56: {
                result.hasHkOptionQotRight = input.ReadInt32(ref result.hkOptionQotRight_);
                break;
              }
              case 64: {
                result.hasHasUSOptionQotRight = input.ReadBool(ref result.hasUSOptionQotRight_);
                break;
              }
              case 72: {
                result.hasHkFutureQotRight = input.ReadInt32(ref result.hkFutureQotRight_);
                break;
              }
              case 80: {
                result.hasUsFutureQotRight = input.ReadInt32(ref result.usFutureQotRight_);
                break;
              }
              case 88: {
                result.hasUsOptionQotRight = input.ReadInt32(ref result.usOptionQotRight_);
                break;
              }
              case 96: {
                result.hasUsIndexQotRight = input.ReadInt32(ref result.usIndexQotRight_);
                break;
              }
              case 104: {
                result.hasUsOtcQotRight = input.ReadInt32(ref result.usOtcQotRight_);
                break;
              }
              case 112: {
                result.hasSgFutureQotRight = input.ReadInt32(ref result.sgFutureQotRight_);
                break;
              }
              case 120: {
                result.hasJpFutureQotRight = input.ReadInt32(ref result.jpFutureQotRight_);
                break;
              }
              case 128: {
                result.hasUsCMEFutureQotRight = input.ReadInt32(ref result.usCMEFutureQotRight_);
                break;
              }
              case 136: {
                result.hasUsCBOTFutureQotRight = input.ReadInt32(ref result.usCBOTFutureQotRight_);
                break;
              }
              case 144: {
                result.hasUsNYMEXFutureQotRight = input.ReadInt32(ref result.usNYMEXFutureQotRight_);
                break;
              }
              case 152: {
                result.hasUsCOMEXFutureQotRight = input.ReadInt32(ref result.usCOMEXFutureQotRight_);
                break;
              }
              case 160: {
                result.hasUsCBOEFutureQotRight = input.ReadInt32(ref result.usCBOEFutureQotRight_);
                break;
              }
              case 168: {
                result.hasShQotRight = input.ReadInt32(ref result.shQotRight_);
                break;
              }
              case 176: {
                result.hasSzQotRight = input.ReadInt32(ref result.szQotRight_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasHkQotRight {
          get { return result.hasHkQotRight; }
        }
        public int HkQotRight {
          get { return result.HkQotRight; }
          set { SetHkQotRight(value); }
        }
        public Builder SetHkQotRight(int value) {
          PrepareBuilder();
          result.hasHkQotRight = true;
          result.hkQotRight_ = value;
          return this;
        }
        public Builder ClearHkQotRight() {
          PrepareBuilder();
          result.hasHkQotRight = false;
          result.hkQotRight_ = 0;
          return this;
        }
        
        public bool HasUsQotRight {
          get { return result.hasUsQotRight; }
        }
        public int UsQotRight {
          get { return result.UsQotRight; }
          set { SetUsQotRight(value); }
        }
        public Builder SetUsQotRight(int value) {
          PrepareBuilder();
          result.hasUsQotRight = true;
          result.usQotRight_ = value;
          return this;
        }
        public Builder ClearUsQotRight() {
          PrepareBuilder();
          result.hasUsQotRight = false;
          result.usQotRight_ = 0;
          return this;
        }
        
        public bool HasCnQotRight {
          get { return result.hasCnQotRight; }
        }
        public int CnQotRight {
          get { return result.CnQotRight; }
          set { SetCnQotRight(value); }
        }
        public Builder SetCnQotRight(int value) {
          PrepareBuilder();
          result.hasCnQotRight = true;
          result.cnQotRight_ = value;
          return this;
        }
        public Builder ClearCnQotRight() {
          PrepareBuilder();
          result.hasCnQotRight = false;
          result.cnQotRight_ = 0;
          return this;
        }
        
        public bool HasHkOptionQotRight {
          get { return result.hasHkOptionQotRight; }
        }
        public int HkOptionQotRight {
          get { return result.HkOptionQotRight; }
          set { SetHkOptionQotRight(value); }
        }
        public Builder SetHkOptionQotRight(int value) {
          PrepareBuilder();
          result.hasHkOptionQotRight = true;
          result.hkOptionQotRight_ = value;
          return this;
        }
        public Builder ClearHkOptionQotRight() {
          PrepareBuilder();
          result.hasHkOptionQotRight = false;
          result.hkOptionQotRight_ = 0;
          return this;
        }
        
        public bool HasHasUSOptionQotRight {
          get { return result.hasHasUSOptionQotRight; }
        }
        public bool HasUSOptionQotRight {
          get { return result.HasUSOptionQotRight; }
          set { SetHasUSOptionQotRight(value); }
        }
        public Builder SetHasUSOptionQotRight(bool value) {
          PrepareBuilder();
          result.hasHasUSOptionQotRight = true;
          result.hasUSOptionQotRight_ = value;
          return this;
        }
        public Builder ClearHasUSOptionQotRight() {
          PrepareBuilder();
          result.hasHasUSOptionQotRight = false;
          result.hasUSOptionQotRight_ = false;
          return this;
        }
        
        public bool HasHkFutureQotRight {
          get { return result.hasHkFutureQotRight; }
        }
        public int HkFutureQotRight {
          get { return result.HkFutureQotRight; }
          set { SetHkFutureQotRight(value); }
        }
        public Builder SetHkFutureQotRight(int value) {
          PrepareBuilder();
          result.hasHkFutureQotRight = true;
          result.hkFutureQotRight_ = value;
          return this;
        }
        public Builder ClearHkFutureQotRight() {
          PrepareBuilder();
          result.hasHkFutureQotRight = false;
          result.hkFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsFutureQotRight {
          get { return result.hasUsFutureQotRight; }
        }
        public int UsFutureQotRight {
          get { return result.UsFutureQotRight; }
          set { SetUsFutureQotRight(value); }
        }
        public Builder SetUsFutureQotRight(int value) {
          PrepareBuilder();
          result.hasUsFutureQotRight = true;
          result.usFutureQotRight_ = value;
          return this;
        }
        public Builder ClearUsFutureQotRight() {
          PrepareBuilder();
          result.hasUsFutureQotRight = false;
          result.usFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsOptionQotRight {
          get { return result.hasUsOptionQotRight; }
        }
        public int UsOptionQotRight {
          get { return result.UsOptionQotRight; }
          set { SetUsOptionQotRight(value); }
        }
        public Builder SetUsOptionQotRight(int value) {
          PrepareBuilder();
          result.hasUsOptionQotRight = true;
          result.usOptionQotRight_ = value;
          return this;
        }
        public Builder ClearUsOptionQotRight() {
          PrepareBuilder();
          result.hasUsOptionQotRight = false;
          result.usOptionQotRight_ = 0;
          return this;
        }
        
        public bool HasUsIndexQotRight {
          get { return result.hasUsIndexQotRight; }
        }
        public int UsIndexQotRight {
          get { return result.UsIndexQotRight; }
          set { SetUsIndexQotRight(value); }
        }
        public Builder SetUsIndexQotRight(int value) {
          PrepareBuilder();
          result.hasUsIndexQotRight = true;
          result.usIndexQotRight_ = value;
          return this;
        }
        public Builder ClearUsIndexQotRight() {
          PrepareBuilder();
          result.hasUsIndexQotRight = false;
          result.usIndexQotRight_ = 0;
          return this;
        }
        
        public bool HasUsOtcQotRight {
          get { return result.hasUsOtcQotRight; }
        }
        public int UsOtcQotRight {
          get { return result.UsOtcQotRight; }
          set { SetUsOtcQotRight(value); }
        }
        public Builder SetUsOtcQotRight(int value) {
          PrepareBuilder();
          result.hasUsOtcQotRight = true;
          result.usOtcQotRight_ = value;
          return this;
        }
        public Builder ClearUsOtcQotRight() {
          PrepareBuilder();
          result.hasUsOtcQotRight = false;
          result.usOtcQotRight_ = 0;
          return this;
        }
        
        public bool HasSgFutureQotRight {
          get { return result.hasSgFutureQotRight; }
        }
        public int SgFutureQotRight {
          get { return result.SgFutureQotRight; }
          set { SetSgFutureQotRight(value); }
        }
        public Builder SetSgFutureQotRight(int value) {
          PrepareBuilder();
          result.hasSgFutureQotRight = true;
          result.sgFutureQotRight_ = value;
          return this;
        }
        public Builder ClearSgFutureQotRight() {
          PrepareBuilder();
          result.hasSgFutureQotRight = false;
          result.sgFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasJpFutureQotRight {
          get { return result.hasJpFutureQotRight; }
        }
        public int JpFutureQotRight {
          get { return result.JpFutureQotRight; }
          set { SetJpFutureQotRight(value); }
        }
        public Builder SetJpFutureQotRight(int value) {
          PrepareBuilder();
          result.hasJpFutureQotRight = true;
          result.jpFutureQotRight_ = value;
          return this;
        }
        public Builder ClearJpFutureQotRight() {
          PrepareBuilder();
          result.hasJpFutureQotRight = false;
          result.jpFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsCMEFutureQotRight {
          get { return result.hasUsCMEFutureQotRight; }
        }
        public int UsCMEFutureQotRight {
          get { return result.UsCMEFutureQotRight; }
          set { SetUsCMEFutureQotRight(value); }
        }
        public Builder SetUsCMEFutureQotRight(int value) {
          PrepareBuilder();
          result.hasUsCMEFutureQotRight = true;
          result.usCMEFutureQotRight_ = value;
          return this;
        }
        public Builder ClearUsCMEFutureQotRight() {
          PrepareBuilder();
          result.hasUsCMEFutureQotRight = false;
          result.usCMEFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsCBOTFutureQotRight {
          get { return result.hasUsCBOTFutureQotRight; }
        }
        public int UsCBOTFutureQotRight {
          get { return result.UsCBOTFutureQotRight; }
          set { SetUsCBOTFutureQotRight(value); }
        }
        public Builder SetUsCBOTFutureQotRight(int value) {
          PrepareBuilder();
          result.hasUsCBOTFutureQotRight = true;
          result.usCBOTFutureQotRight_ = value;
          return this;
        }
        public Builder ClearUsCBOTFutureQotRight() {
          PrepareBuilder();
          result.hasUsCBOTFutureQotRight = false;
          result.usCBOTFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsNYMEXFutureQotRight {
          get { return result.hasUsNYMEXFutureQotRight; }
        }
        public int UsNYMEXFutureQotRight {
          get { return result.UsNYMEXFutureQotRight; }
          set { SetUsNYMEXFutureQotRight(value); }
        }
        public Builder SetUsNYMEXFutureQotRight(int value) {
          PrepareBuilder();
          result.hasUsNYMEXFutureQotRight = true;
          result.usNYMEXFutureQotRight_ = value;
          return this;
        }
        public Builder ClearUsNYMEXFutureQotRight() {
          PrepareBuilder();
          result.hasUsNYMEXFutureQotRight = false;
          result.usNYMEXFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsCOMEXFutureQotRight {
          get { return result.hasUsCOMEXFutureQotRight; }
        }
        public int UsCOMEXFutureQotRight {
          get { return result.UsCOMEXFutureQotRight; }
          set { SetUsCOMEXFutureQotRight(value); }
        }
        public Builder SetUsCOMEXFutureQotRight(int value) {
          PrepareBuilder();
          result.hasUsCOMEXFutureQotRight = true;
          result.usCOMEXFutureQotRight_ = value;
          return this;
        }
        public Builder ClearUsCOMEXFutureQotRight() {
          PrepareBuilder();
          result.hasUsCOMEXFutureQotRight = false;
          result.usCOMEXFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsCBOEFutureQotRight {
          get { return result.hasUsCBOEFutureQotRight; }
        }
        public int UsCBOEFutureQotRight {
          get { return result.UsCBOEFutureQotRight; }
          set { SetUsCBOEFutureQotRight(value); }
        }
        public Builder SetUsCBOEFutureQotRight(int value) {
          PrepareBuilder();
          result.hasUsCBOEFutureQotRight = true;
          result.usCBOEFutureQotRight_ = value;
          return this;
        }
        public Builder ClearUsCBOEFutureQotRight() {
          PrepareBuilder();
          result.hasUsCBOEFutureQotRight = false;
          result.usCBOEFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasShQotRight {
          get { return result.hasShQotRight; }
        }
        public int ShQotRight {
          get { return result.ShQotRight; }
          set { SetShQotRight(value); }
        }
        public Builder SetShQotRight(int value) {
          PrepareBuilder();
          result.hasShQotRight = true;
          result.shQotRight_ = value;
          return this;
        }
        public Builder ClearShQotRight() {
          PrepareBuilder();
          result.hasShQotRight = false;
          result.shQotRight_ = 0;
          return this;
        }
        
        public bool HasSzQotRight {
          get { return result.hasSzQotRight; }
        }
        public int SzQotRight {
          get { return result.SzQotRight; }
          set { SetSzQotRight(value); }
        }
        public Builder SetSzQotRight(int value) {
          PrepareBuilder();
          result.hasSzQotRight = true;
          result.szQotRight_ = value;
          return this;
        }
        public Builder ClearSzQotRight() {
          PrepareBuilder();
          result.hasSzQotRight = false;
          result.szQotRight_ = 0;
          return this;
        }
      }
      static QotRight() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class APILevel : pb::GeneratedMessage<APILevel, APILevel.Builder> {
      private APILevel() { }
      private static readonly APILevel defaultInstance = new APILevel().MakeReadOnly();
      private static readonly string[] _aPILevelFieldNames = new string[] { "apiLevel" };
      private static readonly uint[] _aPILevelFieldTags = new uint[] { 26 };
      public static APILevel DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override APILevel DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override APILevel ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_APILevel__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<APILevel, APILevel.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_APILevel__FieldAccessorTable; }
      }
      
      public const int ApiLevelFieldNumber = 3;
      private bool hasApiLevel;
      private string apiLevel_ = "";
      public bool HasApiLevel {
        get { return hasApiLevel; }
      }
      public string ApiLevel {
        get { return apiLevel_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasApiLevel) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _aPILevelFieldNames;
        if (hasApiLevel) {
          output.WriteString(3, field_names[0], ApiLevel);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasApiLevel) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ApiLevel);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static APILevel ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static APILevel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static APILevel ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static APILevel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static APILevel ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static APILevel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static APILevel ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static APILevel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static APILevel ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static APILevel ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private APILevel MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(APILevel prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<APILevel, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(APILevel cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private APILevel result;
        
        private APILevel PrepareBuilder() {
          if (resultIsReadOnly) {
            APILevel original = result;
            result = new APILevel();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override APILevel MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.APILevel.Descriptor; }
        }
        
        public override APILevel DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance; }
        }
        
        public override APILevel BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is APILevel) {
            return MergeFrom((APILevel) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(APILevel other) {
          if (other == global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasApiLevel) {
            ApiLevel = other.ApiLevel;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_aPILevelFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _aPILevelFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 26: {
                result.hasApiLevel = input.ReadString(ref result.apiLevel_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasApiLevel {
          get { return result.hasApiLevel; }
        }
        public string ApiLevel {
          get { return result.ApiLevel; }
          set { SetApiLevel(value); }
        }
        public Builder SetApiLevel(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApiLevel = true;
          result.apiLevel_ = value;
          return this;
        }
        public Builder ClearApiLevel() {
          PrepareBuilder();
          result.hasApiLevel = false;
          result.apiLevel_ = "";
          return this;
        }
      }
      static APILevel() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class APIQuota : pb::GeneratedMessage<APIQuota, APIQuota.Builder> {
      private APIQuota() { }
      private static readonly APIQuota defaultInstance = new APIQuota().MakeReadOnly();
      private static readonly string[] _aPIQuotaFieldNames = new string[] { "historyKLQuota", "subQuota" };
      private static readonly uint[] _aPIQuotaFieldTags = new uint[] { 16, 8 };
      public static APIQuota DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override APIQuota DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override APIQuota ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_APIQuota__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<APIQuota, APIQuota.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_APIQuota__FieldAccessorTable; }
      }
      
      public const int SubQuotaFieldNumber = 1;
      private bool hasSubQuota;
      private int subQuota_;
      public bool HasSubQuota {
        get { return hasSubQuota; }
      }
      public int SubQuota {
        get { return subQuota_; }
      }
      
      public const int HistoryKLQuotaFieldNumber = 2;
      private bool hasHistoryKLQuota;
      private int historyKLQuota_;
      public bool HasHistoryKLQuota {
        get { return hasHistoryKLQuota; }
      }
      public int HistoryKLQuota {
        get { return historyKLQuota_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasSubQuota) return false;
          if (!hasHistoryKLQuota) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _aPIQuotaFieldNames;
        if (hasSubQuota) {
          output.WriteInt32(1, field_names[1], SubQuota);
        }
        if (hasHistoryKLQuota) {
          output.WriteInt32(2, field_names[0], HistoryKLQuota);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSubQuota) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, SubQuota);
        }
        if (hasHistoryKLQuota) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, HistoryKLQuota);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static APIQuota ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static APIQuota ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static APIQuota ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static APIQuota ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static APIQuota ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static APIQuota ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static APIQuota ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static APIQuota ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static APIQuota ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static APIQuota ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private APIQuota MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(APIQuota prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<APIQuota, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(APIQuota cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private APIQuota result;
        
        private APIQuota PrepareBuilder() {
          if (resultIsReadOnly) {
            APIQuota original = result;
            result = new APIQuota();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override APIQuota MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.APIQuota.Descriptor; }
        }
        
        public override APIQuota DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.APIQuota.DefaultInstance; }
        }
        
        public override APIQuota BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is APIQuota) {
            return MergeFrom((APIQuota) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(APIQuota other) {
          if (other == global::Futu.OpenApi.Pb.Notify.APIQuota.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasSubQuota) {
            SubQuota = other.SubQuota;
          }
          if (other.HasHistoryKLQuota) {
            HistoryKLQuota = other.HistoryKLQuota;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_aPIQuotaFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _aPIQuotaFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasSubQuota = input.ReadInt32(ref result.subQuota_);
                break;
              }
              case 16: {
                result.hasHistoryKLQuota = input.ReadInt32(ref result.historyKLQuota_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasSubQuota {
          get { return result.hasSubQuota; }
        }
        public int SubQuota {
          get { return result.SubQuota; }
          set { SetSubQuota(value); }
        }
        public Builder SetSubQuota(int value) {
          PrepareBuilder();
          result.hasSubQuota = true;
          result.subQuota_ = value;
          return this;
        }
        public Builder ClearSubQuota() {
          PrepareBuilder();
          result.hasSubQuota = false;
          result.subQuota_ = 0;
          return this;
        }
        
        public bool HasHistoryKLQuota {
          get { return result.hasHistoryKLQuota; }
        }
        public int HistoryKLQuota {
          get { return result.HistoryKLQuota; }
          set { SetHistoryKLQuota(value); }
        }
        public Builder SetHistoryKLQuota(int value) {
          PrepareBuilder();
          result.hasHistoryKLQuota = true;
          result.historyKLQuota_ = value;
          return this;
        }
        public Builder ClearHistoryKLQuota() {
          PrepareBuilder();
          result.hasHistoryKLQuota = false;
          result.historyKLQuota_ = 0;
          return this;
        }
      }
      static APIQuota() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class UsedQuota : pb::GeneratedMessage<UsedQuota, UsedQuota.Builder> {
      private UsedQuota() { }
      private static readonly UsedQuota defaultInstance = new UsedQuota().MakeReadOnly();
      private static readonly string[] _usedQuotaFieldNames = new string[] { "usedKLineQuota", "usedSubQuota" };
      private static readonly uint[] _usedQuotaFieldTags = new uint[] { 16, 8 };
      public static UsedQuota DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override UsedQuota DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override UsedQuota ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_UsedQuota__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<UsedQuota, UsedQuota.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_UsedQuota__FieldAccessorTable; }
      }
      
      public const int UsedSubQuotaFieldNumber = 1;
      private bool hasUsedSubQuota;
      private int usedSubQuota_;
      public bool HasUsedSubQuota {
        get { return hasUsedSubQuota; }
      }
      public int UsedSubQuota {
        get { return usedSubQuota_; }
      }
      
      public const int UsedKLineQuotaFieldNumber = 2;
      private bool hasUsedKLineQuota;
      private int usedKLineQuota_;
      public bool HasUsedKLineQuota {
        get { return hasUsedKLineQuota; }
      }
      public int UsedKLineQuota {
        get { return usedKLineQuota_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _usedQuotaFieldNames;
        if (hasUsedSubQuota) {
          output.WriteInt32(1, field_names[1], UsedSubQuota);
        }
        if (hasUsedKLineQuota) {
          output.WriteInt32(2, field_names[0], UsedKLineQuota);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUsedSubQuota) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UsedSubQuota);
        }
        if (hasUsedKLineQuota) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, UsedKLineQuota);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static UsedQuota ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static UsedQuota ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static UsedQuota ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static UsedQuota ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static UsedQuota ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static UsedQuota ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static UsedQuota ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static UsedQuota ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static UsedQuota ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static UsedQuota ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private UsedQuota MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(UsedQuota prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<UsedQuota, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(UsedQuota cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private UsedQuota result;
        
        private UsedQuota PrepareBuilder() {
          if (resultIsReadOnly) {
            UsedQuota original = result;
            result = new UsedQuota();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override UsedQuota MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.UsedQuota.Descriptor; }
        }
        
        public override UsedQuota DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.UsedQuota.DefaultInstance; }
        }
        
        public override UsedQuota BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is UsedQuota) {
            return MergeFrom((UsedQuota) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(UsedQuota other) {
          if (other == global::Futu.OpenApi.Pb.Notify.UsedQuota.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasUsedSubQuota) {
            UsedSubQuota = other.UsedSubQuota;
          }
          if (other.HasUsedKLineQuota) {
            UsedKLineQuota = other.UsedKLineQuota;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_usedQuotaFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _usedQuotaFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasUsedSubQuota = input.ReadInt32(ref result.usedSubQuota_);
                break;
              }
              case 16: {
                result.hasUsedKLineQuota = input.ReadInt32(ref result.usedKLineQuota_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasUsedSubQuota {
          get { return result.hasUsedSubQuota; }
        }
        public int UsedSubQuota {
          get { return result.UsedSubQuota; }
          set { SetUsedSubQuota(value); }
        }
        public Builder SetUsedSubQuota(int value) {
          PrepareBuilder();
          result.hasUsedSubQuota = true;
          result.usedSubQuota_ = value;
          return this;
        }
        public Builder ClearUsedSubQuota() {
          PrepareBuilder();
          result.hasUsedSubQuota = false;
          result.usedSubQuota_ = 0;
          return this;
        }
        
        public bool HasUsedKLineQuota {
          get { return result.hasUsedKLineQuota; }
        }
        public int UsedKLineQuota {
          get { return result.UsedKLineQuota; }
          set { SetUsedKLineQuota(value); }
        }
        public Builder SetUsedKLineQuota(int value) {
          PrepareBuilder();
          result.hasUsedKLineQuota = true;
          result.usedKLineQuota_ = value;
          return this;
        }
        public Builder ClearUsedKLineQuota() {
          PrepareBuilder();
          result.hasUsedKLineQuota = false;
          result.usedKLineQuota_ = 0;
          return this;
        }
      }
      static UsedQuota() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "apiLevel", "apiQuota", "connectStatus", "event", "programStatus", "qotRight", "type", "usedQuota" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 50, 58, 34, 18, 26, 42, 8, 66 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_S2C__FieldAccessorTable; }
      }
      
      public const int TypeFieldNumber = 1;
      private bool hasType;
      private int type_;
      public bool HasType {
        get { return hasType; }
      }
      public int Type {
        get { return type_; }
      }
      
      public const int EventFieldNumber = 2;
      private bool hasEvent;
      private global::Futu.OpenApi.Pb.Notify.GtwEvent event_;
      public bool HasEvent {
        get { return hasEvent; }
      }
      public global::Futu.OpenApi.Pb.Notify.GtwEvent Event {
        get { return event_ ?? global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance; }
      }
      
      public const int ProgramStatusFieldNumber = 3;
      private bool hasProgramStatus;
      private global::Futu.OpenApi.Pb.Notify.ProgramStatus programStatus_;
      public bool HasProgramStatus {
        get { return hasProgramStatus; }
      }
      public global::Futu.OpenApi.Pb.Notify.ProgramStatus ProgramStatus {
        get { return programStatus_ ?? global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance; }
      }
      
      public const int ConnectStatusFieldNumber = 4;
      private bool hasConnectStatus;
      private global::Futu.OpenApi.Pb.Notify.ConnectStatus connectStatus_;
      public bool HasConnectStatus {
        get { return hasConnectStatus; }
      }
      public global::Futu.OpenApi.Pb.Notify.ConnectStatus ConnectStatus {
        get { return connectStatus_ ?? global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance; }
      }
      
      public const int QotRightFieldNumber = 5;
      private bool hasQotRight;
      private global::Futu.OpenApi.Pb.Notify.QotRight qotRight_;
      public bool HasQotRight {
        get { return hasQotRight; }
      }
      public global::Futu.OpenApi.Pb.Notify.QotRight QotRight {
        get { return qotRight_ ?? global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance; }
      }
      
      public const int ApiLevelFieldNumber = 6;
      private bool hasApiLevel;
      private global::Futu.OpenApi.Pb.Notify.APILevel apiLevel_;
      public bool HasApiLevel {
        get { return hasApiLevel; }
      }
      public global::Futu.OpenApi.Pb.Notify.APILevel ApiLevel {
        get { return apiLevel_ ?? global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance; }
      }
      
      public const int ApiQuotaFieldNumber = 7;
      private bool hasApiQuota;
      private global::Futu.OpenApi.Pb.Notify.APIQuota apiQuota_;
      public bool HasApiQuota {
        get { return hasApiQuota; }
      }
      public global::Futu.OpenApi.Pb.Notify.APIQuota ApiQuota {
        get { return apiQuota_ ?? global::Futu.OpenApi.Pb.Notify.APIQuota.DefaultInstance; }
      }
      
      public const int UsedQuotaFieldNumber = 8;
      private bool hasUsedQuota;
      private global::Futu.OpenApi.Pb.Notify.UsedQuota usedQuota_;
      public bool HasUsedQuota {
        get { return hasUsedQuota; }
      }
      public global::Futu.OpenApi.Pb.Notify.UsedQuota UsedQuota {
        get { return usedQuota_ ?? global::Futu.OpenApi.Pb.Notify.UsedQuota.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasType) return false;
          if (HasEvent) {
            if (!Event.IsInitialized) return false;
          }
          if (HasProgramStatus) {
            if (!ProgramStatus.IsInitialized) return false;
          }
          if (HasConnectStatus) {
            if (!ConnectStatus.IsInitialized) return false;
          }
          if (HasQotRight) {
            if (!QotRight.IsInitialized) return false;
          }
          if (HasApiLevel) {
            if (!ApiLevel.IsInitialized) return false;
          }
          if (HasApiQuota) {
            if (!ApiQuota.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (hasType) {
          output.WriteInt32(1, field_names[6], Type);
        }
        if (hasEvent) {
          output.WriteMessage(2, field_names[3], Event);
        }
        if (hasProgramStatus) {
          output.WriteMessage(3, field_names[4], ProgramStatus);
        }
        if (hasConnectStatus) {
          output.WriteMessage(4, field_names[2], ConnectStatus);
        }
        if (hasQotRight) {
          output.WriteMessage(5, field_names[5], QotRight);
        }
        if (hasApiLevel) {
          output.WriteMessage(6, field_names[0], ApiLevel);
        }
        if (hasApiQuota) {
          output.WriteMessage(7, field_names[1], ApiQuota);
        }
        if (hasUsedQuota) {
          output.WriteMessage(8, field_names[7], UsedQuota);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
        }
        if (hasEvent) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Event);
        }
        if (hasProgramStatus) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ProgramStatus);
        }
        if (hasConnectStatus) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ConnectStatus);
        }
        if (hasQotRight) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, QotRight);
        }
        if (hasApiLevel) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, ApiLevel);
        }
        if (hasApiQuota) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, ApiQuota);
        }
        if (hasUsedQuota) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, UsedQuota);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasEvent) {
            MergeEvent(other.Event);
          }
          if (other.HasProgramStatus) {
            MergeProgramStatus(other.ProgramStatus);
          }
          if (other.HasConnectStatus) {
            MergeConnectStatus(other.ConnectStatus);
          }
          if (other.HasQotRight) {
            MergeQotRight(other.QotRight);
          }
          if (other.HasApiLevel) {
            MergeApiLevel(other.ApiLevel);
          }
          if (other.HasApiQuota) {
            MergeApiQuota(other.ApiQuota);
          }
          if (other.HasUsedQuota) {
            MergeUsedQuota(other.UsedQuota);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasType = input.ReadInt32(ref result.type_);
                break;
              }
              case 18: {
                global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.GtwEvent.CreateBuilder();
                if (result.hasEvent) {
                  subBuilder.MergeFrom(Event);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Event = subBuilder.BuildPartial();
                break;
              }
              case 26: {
                global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.ProgramStatus.CreateBuilder();
                if (result.hasProgramStatus) {
                  subBuilder.MergeFrom(ProgramStatus);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ProgramStatus = subBuilder.BuildPartial();
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.ConnectStatus.CreateBuilder();
                if (result.hasConnectStatus) {
                  subBuilder.MergeFrom(ConnectStatus);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ConnectStatus = subBuilder.BuildPartial();
                break;
              }
              case 42: {
                global::Futu.OpenApi.Pb.Notify.QotRight.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.QotRight.CreateBuilder();
                if (result.hasQotRight) {
                  subBuilder.MergeFrom(QotRight);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                QotRight = subBuilder.BuildPartial();
                break;
              }
              case 50: {
                global::Futu.OpenApi.Pb.Notify.APILevel.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.APILevel.CreateBuilder();
                if (result.hasApiLevel) {
                  subBuilder.MergeFrom(ApiLevel);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ApiLevel = subBuilder.BuildPartial();
                break;
              }
              case 58: {
                global::Futu.OpenApi.Pb.Notify.APIQuota.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.APIQuota.CreateBuilder();
                if (result.hasApiQuota) {
                  subBuilder.MergeFrom(ApiQuota);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                ApiQuota = subBuilder.BuildPartial();
                break;
              }
              case 66: {
                global::Futu.OpenApi.Pb.Notify.UsedQuota.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.UsedQuota.CreateBuilder();
                if (result.hasUsedQuota) {
                  subBuilder.MergeFrom(UsedQuota);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                UsedQuota = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasType {
          get { return result.hasType; }
        }
        public int Type {
          get { return result.Type; }
          set { SetType(value); }
        }
        public Builder SetType(int value) {
          PrepareBuilder();
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder ClearType() {
          PrepareBuilder();
          result.hasType = false;
          result.type_ = 0;
          return this;
        }
        
        public bool HasEvent {
         get { return result.hasEvent; }
        }
        public global::Futu.OpenApi.Pb.Notify.GtwEvent Event {
          get { return result.Event; }
          set { SetEvent(value); }
        }
        public Builder SetEvent(global::Futu.OpenApi.Pb.Notify.GtwEvent value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasEvent = true;
          result.event_ = value;
          return this;
        }
        public Builder SetEvent(global::Futu.OpenApi.Pb.Notify.GtwEvent.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasEvent = true;
          result.event_ = builderForValue.Build();
          return this;
        }
        public Builder MergeEvent(global::Futu.OpenApi.Pb.Notify.GtwEvent value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasEvent &&
              result.event_ != global::Futu.OpenApi.Pb.Notify.GtwEvent.DefaultInstance) {
              result.event_ = global::Futu.OpenApi.Pb.Notify.GtwEvent.CreateBuilder(result.event_).MergeFrom(value).BuildPartial();
          } else {
            result.event_ = value;
          }
          result.hasEvent = true;
          return this;
        }
        public Builder ClearEvent() {
          PrepareBuilder();
          result.hasEvent = false;
          result.event_ = null;
          return this;
        }
        
        public bool HasProgramStatus {
         get { return result.hasProgramStatus; }
        }
        public global::Futu.OpenApi.Pb.Notify.ProgramStatus ProgramStatus {
          get { return result.ProgramStatus; }
          set { SetProgramStatus(value); }
        }
        public Builder SetProgramStatus(global::Futu.OpenApi.Pb.Notify.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasProgramStatus = true;
          result.programStatus_ = value;
          return this;
        }
        public Builder SetProgramStatus(global::Futu.OpenApi.Pb.Notify.ProgramStatus.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasProgramStatus = true;
          result.programStatus_ = builderForValue.Build();
          return this;
        }
        public Builder MergeProgramStatus(global::Futu.OpenApi.Pb.Notify.ProgramStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasProgramStatus &&
              result.programStatus_ != global::Futu.OpenApi.Pb.Notify.ProgramStatus.DefaultInstance) {
              result.programStatus_ = global::Futu.OpenApi.Pb.Notify.ProgramStatus.CreateBuilder(result.programStatus_).MergeFrom(value).BuildPartial();
          } else {
            result.programStatus_ = value;
          }
          result.hasProgramStatus = true;
          return this;
        }
        public Builder ClearProgramStatus() {
          PrepareBuilder();
          result.hasProgramStatus = false;
          result.programStatus_ = null;
          return this;
        }
        
        public bool HasConnectStatus {
         get { return result.hasConnectStatus; }
        }
        public global::Futu.OpenApi.Pb.Notify.ConnectStatus ConnectStatus {
          get { return result.ConnectStatus; }
          set { SetConnectStatus(value); }
        }
        public Builder SetConnectStatus(global::Futu.OpenApi.Pb.Notify.ConnectStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasConnectStatus = true;
          result.connectStatus_ = value;
          return this;
        }
        public Builder SetConnectStatus(global::Futu.OpenApi.Pb.Notify.ConnectStatus.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasConnectStatus = true;
          result.connectStatus_ = builderForValue.Build();
          return this;
        }
        public Builder MergeConnectStatus(global::Futu.OpenApi.Pb.Notify.ConnectStatus value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasConnectStatus &&
              result.connectStatus_ != global::Futu.OpenApi.Pb.Notify.ConnectStatus.DefaultInstance) {
              result.connectStatus_ = global::Futu.OpenApi.Pb.Notify.ConnectStatus.CreateBuilder(result.connectStatus_).MergeFrom(value).BuildPartial();
          } else {
            result.connectStatus_ = value;
          }
          result.hasConnectStatus = true;
          return this;
        }
        public Builder ClearConnectStatus() {
          PrepareBuilder();
          result.hasConnectStatus = false;
          result.connectStatus_ = null;
          return this;
        }
        
        public bool HasQotRight {
         get { return result.hasQotRight; }
        }
        public global::Futu.OpenApi.Pb.Notify.QotRight QotRight {
          get { return result.QotRight; }
          set { SetQotRight(value); }
        }
        public Builder SetQotRight(global::Futu.OpenApi.Pb.Notify.QotRight value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasQotRight = true;
          result.qotRight_ = value;
          return this;
        }
        public Builder SetQotRight(global::Futu.OpenApi.Pb.Notify.QotRight.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasQotRight = true;
          result.qotRight_ = builderForValue.Build();
          return this;
        }
        public Builder MergeQotRight(global::Futu.OpenApi.Pb.Notify.QotRight value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasQotRight &&
              result.qotRight_ != global::Futu.OpenApi.Pb.Notify.QotRight.DefaultInstance) {
              result.qotRight_ = global::Futu.OpenApi.Pb.Notify.QotRight.CreateBuilder(result.qotRight_).MergeFrom(value).BuildPartial();
          } else {
            result.qotRight_ = value;
          }
          result.hasQotRight = true;
          return this;
        }
        public Builder ClearQotRight() {
          PrepareBuilder();
          result.hasQotRight = false;
          result.qotRight_ = null;
          return this;
        }
        
        public bool HasApiLevel {
         get { return result.hasApiLevel; }
        }
        public global::Futu.OpenApi.Pb.Notify.APILevel ApiLevel {
          get { return result.ApiLevel; }
          set { SetApiLevel(value); }
        }
        public Builder SetApiLevel(global::Futu.OpenApi.Pb.Notify.APILevel value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApiLevel = true;
          result.apiLevel_ = value;
          return this;
        }
        public Builder SetApiLevel(global::Futu.OpenApi.Pb.Notify.APILevel.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasApiLevel = true;
          result.apiLevel_ = builderForValue.Build();
          return this;
        }
        public Builder MergeApiLevel(global::Futu.OpenApi.Pb.Notify.APILevel value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasApiLevel &&
              result.apiLevel_ != global::Futu.OpenApi.Pb.Notify.APILevel.DefaultInstance) {
              result.apiLevel_ = global::Futu.OpenApi.Pb.Notify.APILevel.CreateBuilder(result.apiLevel_).MergeFrom(value).BuildPartial();
          } else {
            result.apiLevel_ = value;
          }
          result.hasApiLevel = true;
          return this;
        }
        public Builder ClearApiLevel() {
          PrepareBuilder();
          result.hasApiLevel = false;
          result.apiLevel_ = null;
          return this;
        }
        
        public bool HasApiQuota {
         get { return result.hasApiQuota; }
        }
        public global::Futu.OpenApi.Pb.Notify.APIQuota ApiQuota {
          get { return result.ApiQuota; }
          set { SetApiQuota(value); }
        }
        public Builder SetApiQuota(global::Futu.OpenApi.Pb.Notify.APIQuota value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApiQuota = true;
          result.apiQuota_ = value;
          return this;
        }
        public Builder SetApiQuota(global::Futu.OpenApi.Pb.Notify.APIQuota.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasApiQuota = true;
          result.apiQuota_ = builderForValue.Build();
          return this;
        }
        public Builder MergeApiQuota(global::Futu.OpenApi.Pb.Notify.APIQuota value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasApiQuota &&
              result.apiQuota_ != global::Futu.OpenApi.Pb.Notify.APIQuota.DefaultInstance) {
              result.apiQuota_ = global::Futu.OpenApi.Pb.Notify.APIQuota.CreateBuilder(result.apiQuota_).MergeFrom(value).BuildPartial();
          } else {
            result.apiQuota_ = value;
          }
          result.hasApiQuota = true;
          return this;
        }
        public Builder ClearApiQuota() {
          PrepareBuilder();
          result.hasApiQuota = false;
          result.apiQuota_ = null;
          return this;
        }
        
        public bool HasUsedQuota {
         get { return result.hasUsedQuota; }
        }
        public global::Futu.OpenApi.Pb.Notify.UsedQuota UsedQuota {
          get { return result.UsedQuota; }
          set { SetUsedQuota(value); }
        }
        public Builder SetUsedQuota(global::Futu.OpenApi.Pb.Notify.UsedQuota value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasUsedQuota = true;
          result.usedQuota_ = value;
          return this;
        }
        public Builder SetUsedQuota(global::Futu.OpenApi.Pb.Notify.UsedQuota.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasUsedQuota = true;
          result.usedQuota_ = builderForValue.Build();
          return this;
        }
        public Builder MergeUsedQuota(global::Futu.OpenApi.Pb.Notify.UsedQuota value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasUsedQuota &&
              result.usedQuota_ != global::Futu.OpenApi.Pb.Notify.UsedQuota.DefaultInstance) {
              result.usedQuota_ = global::Futu.OpenApi.Pb.Notify.UsedQuota.CreateBuilder(result.usedQuota_).MergeFrom(value).BuildPartial();
          } else {
            result.usedQuota_ = value;
          }
          result.hasUsedQuota = true;
          return this;
        }
        public Builder ClearUsedQuota() {
          PrepareBuilder();
          result.hasUsedQuota = false;
          result.usedQuota_ = null;
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.Notify.internal__static_Notify_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.Notify.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.Notify.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.Notify.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.Notify.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.Notify.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.Notify.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.Notify.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.Notify.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.Notify.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.Notify.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.Notify.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.Notify.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.Notify.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.Notify.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
