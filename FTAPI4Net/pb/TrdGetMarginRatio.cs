// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class TrdGetMarginRatio {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Trd_GetMarginRatio_MarginRatioInfo__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo, global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.Builder> internal__static_Trd_GetMarginRatio_MarginRatioInfo__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Trd_GetMarginRatio_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S, global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.Builder> internal__static_Trd_GetMarginRatio_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Trd_GetMarginRatio_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C, global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.Builder> internal__static_Trd_GetMarginRatio_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Trd_GetMarginRatio_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.Request, global::Futu.OpenApi.Pb.TrdGetMarginRatio.Request.Builder> internal__static_Trd_GetMarginRatio_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Trd_GetMarginRatio_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.Response, global::Futu.OpenApi.Pb.TrdGetMarginRatio.Response.Builder> internal__static_Trd_GetMarginRatio_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static TrdGetMarginRatio() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhUcmRfR2V0TWFyZ2luUmF0aW8ucHJvdG8SElRyZF9HZXRNYXJnaW5SYXRp", 
            "bxoQVHJkX0NvbW1vbi5wcm90bxoQUW90X0NvbW1vbi5wcm90byKDBAoPTWFy", 
            "Z2luUmF0aW9JbmZvEjAKCHNlY3VyaXR5GAEgAigLMhQuUW90X0NvbW1vbi5T", 
            "ZWN1cml0eVIIc2VjdXJpdHkSIgoMaXNMb25nUGVybWl0GAIgASgIUgxpc0xv", 
            "bmdQZXJtaXQSJAoNaXNTaG9ydFBlcm1pdBgDIAEoCFINaXNTaG9ydFBlcm1p", 
            "dBIoCg9zaG9ydFBvb2xSZW1haW4YBCABKAFSD3Nob3J0UG9vbFJlbWFpbhIi", 
            "CgxzaG9ydEZlZVJhdGUYBSABKAFSDHNob3J0RmVlUmF0ZRImCg5hbGVydExv", 
            "bmdSYXRpbxgGIAEoAVIOYWxlcnRMb25nUmF0aW8SKAoPYWxlcnRTaG9ydFJh", 
            "dGlvGAcgASgBUg9hbGVydFNob3J0UmF0aW8SIAoLaW1Mb25nUmF0aW8YCCAB", 
            "KAFSC2ltTG9uZ1JhdGlvEiIKDGltU2hvcnRSYXRpbxgJIAEoAVIMaW1TaG9y", 
            "dFJhdGlvEiIKDG1jbUxvbmdSYXRpbxgKIAEoAVIMbWNtTG9uZ1JhdGlvEiQK", 
            "DW1jbVNob3J0UmF0aW8YCyABKAFSDW1jbVNob3J0UmF0aW8SIAoLbW1Mb25n", 
            "UmF0aW8YDCABKAFSC21tTG9uZ1JhdGlvEiIKDG1tU2hvcnRSYXRpbxgNIAEo", 
            "AVIMbW1TaG9ydFJhdGlvIm4KA0MyUxItCgZoZWFkZXIYASACKAsyFS5UcmRf", 
            "Q29tbW9uLlRyZEhlYWRlclIGaGVhZGVyEjgKDHNlY3VyaXR5TGlzdBgCIAMo", 
            "CzIULlFvdF9Db21tb24uU2VjdXJpdHlSDHNlY3VyaXR5TGlzdCKLAQoDUzJD", 
            "Ei0KBmhlYWRlchgBIAIoCzIVLlRyZF9Db21tb24uVHJkSGVhZGVyUgZoZWFk", 
            "ZXISVQoTbWFyZ2luUmF0aW9JbmZvTGlzdBgCIAMoCzIjLlRyZF9HZXRNYXJn", 
            "aW5SYXRpby5NYXJnaW5SYXRpb0luZm9SE21hcmdpblJhdGlvSW5mb0xpc3Qi", 
            "NAoHUmVxdWVzdBIpCgNjMnMYASACKAsyFy5UcmRfR2V0TWFyZ2luUmF0aW8u", 
            "QzJTUgNjMnMihwEKCFJlc3BvbnNlEh4KB3JldFR5cGUYASACKAU6BC00MDBS", 
            "B3JldFR5cGUSFgoGcmV0TXNnGAIgASgJUgZyZXRNc2cSGAoHZXJyQ29kZRgD", 
            "IAEoBVIHZXJyQ29kZRIpCgNzMmMYBCABKAsyFy5UcmRfR2V0TWFyZ2luUmF0", 
            "aW8uUzJDUgNzMmNCSAoTY29tLmZ1dHUub3BlbmFwaS5wYloxZ2l0aHViLmNv", 
          "bS9mdXR1b3Blbi9mdGFwaTRnby9wYi90cmRnZXRtYXJnaW5yYXRpbw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Trd_GetMarginRatio_MarginRatioInfo__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Trd_GetMarginRatio_MarginRatioInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo, global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.Builder>(internal__static_Trd_GetMarginRatio_MarginRatioInfo__Descriptor,
                new string[] { "Security", "IsLongPermit", "IsShortPermit", "ShortPoolRemain", "ShortFeeRate", "AlertLongRatio", "AlertShortRatio", "ImLongRatio", "ImShortRatio", "McmLongRatio", "McmShortRatio", "MmLongRatio", "MmShortRatio", });
        internal__static_Trd_GetMarginRatio_C2S__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Trd_GetMarginRatio_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S, global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.Builder>(internal__static_Trd_GetMarginRatio_C2S__Descriptor,
                new string[] { "Header", "SecurityList", });
        internal__static_Trd_GetMarginRatio_S2C__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Trd_GetMarginRatio_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C, global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.Builder>(internal__static_Trd_GetMarginRatio_S2C__Descriptor,
                new string[] { "Header", "MarginRatioInfoList", });
        internal__static_Trd_GetMarginRatio_Request__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Trd_GetMarginRatio_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.Request, global::Futu.OpenApi.Pb.TrdGetMarginRatio.Request.Builder>(internal__static_Trd_GetMarginRatio_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_Trd_GetMarginRatio_Response__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Trd_GetMarginRatio_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.Response, global::Futu.OpenApi.Pb.TrdGetMarginRatio.Response.Builder>(internal__static_Trd_GetMarginRatio_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.TrdCommon.RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.QotCommon.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.TrdCommon.Descriptor, 
          global::Futu.OpenApi.Pb.QotCommon.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class MarginRatioInfo : pb::GeneratedMessage<MarginRatioInfo, MarginRatioInfo.Builder> {
      private MarginRatioInfo() { }
      private static readonly MarginRatioInfo defaultInstance = new MarginRatioInfo().MakeReadOnly();
      private static readonly string[] _marginRatioInfoFieldNames = new string[] { "alertLongRatio", "alertShortRatio", "imLongRatio", "imShortRatio", "isLongPermit", "isShortPermit", "mcmLongRatio", "mcmShortRatio", "mmLongRatio", "mmShortRatio", "security", "shortFeeRate", "shortPoolRemain" };
      private static readonly uint[] _marginRatioInfoFieldTags = new uint[] { 49, 57, 65, 73, 16, 24, 81, 89, 97, 105, 10, 41, 33 };
      public static MarginRatioInfo DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override MarginRatioInfo DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override MarginRatioInfo ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_MarginRatioInfo__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<MarginRatioInfo, MarginRatioInfo.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_MarginRatioInfo__FieldAccessorTable; }
      }
      
      public const int SecurityFieldNumber = 1;
      private bool hasSecurity;
      private global::Futu.OpenApi.Pb.QotCommon.Security security_;
      public bool HasSecurity {
        get { return hasSecurity; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security Security {
        get { return security_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int IsLongPermitFieldNumber = 2;
      private bool hasIsLongPermit;
      private bool isLongPermit_;
      public bool HasIsLongPermit {
        get { return hasIsLongPermit; }
      }
      public bool IsLongPermit {
        get { return isLongPermit_; }
      }
      
      public const int IsShortPermitFieldNumber = 3;
      private bool hasIsShortPermit;
      private bool isShortPermit_;
      public bool HasIsShortPermit {
        get { return hasIsShortPermit; }
      }
      public bool IsShortPermit {
        get { return isShortPermit_; }
      }
      
      public const int ShortPoolRemainFieldNumber = 4;
      private bool hasShortPoolRemain;
      private double shortPoolRemain_;
      public bool HasShortPoolRemain {
        get { return hasShortPoolRemain; }
      }
      public double ShortPoolRemain {
        get { return shortPoolRemain_; }
      }
      
      public const int ShortFeeRateFieldNumber = 5;
      private bool hasShortFeeRate;
      private double shortFeeRate_;
      public bool HasShortFeeRate {
        get { return hasShortFeeRate; }
      }
      public double ShortFeeRate {
        get { return shortFeeRate_; }
      }
      
      public const int AlertLongRatioFieldNumber = 6;
      private bool hasAlertLongRatio;
      private double alertLongRatio_;
      public bool HasAlertLongRatio {
        get { return hasAlertLongRatio; }
      }
      public double AlertLongRatio {
        get { return alertLongRatio_; }
      }
      
      public const int AlertShortRatioFieldNumber = 7;
      private bool hasAlertShortRatio;
      private double alertShortRatio_;
      public bool HasAlertShortRatio {
        get { return hasAlertShortRatio; }
      }
      public double AlertShortRatio {
        get { return alertShortRatio_; }
      }
      
      public const int ImLongRatioFieldNumber = 8;
      private bool hasImLongRatio;
      private double imLongRatio_;
      public bool HasImLongRatio {
        get { return hasImLongRatio; }
      }
      public double ImLongRatio {
        get { return imLongRatio_; }
      }
      
      public const int ImShortRatioFieldNumber = 9;
      private bool hasImShortRatio;
      private double imShortRatio_;
      public bool HasImShortRatio {
        get { return hasImShortRatio; }
      }
      public double ImShortRatio {
        get { return imShortRatio_; }
      }
      
      public const int McmLongRatioFieldNumber = 10;
      private bool hasMcmLongRatio;
      private double mcmLongRatio_;
      public bool HasMcmLongRatio {
        get { return hasMcmLongRatio; }
      }
      public double McmLongRatio {
        get { return mcmLongRatio_; }
      }
      
      public const int McmShortRatioFieldNumber = 11;
      private bool hasMcmShortRatio;
      private double mcmShortRatio_;
      public bool HasMcmShortRatio {
        get { return hasMcmShortRatio; }
      }
      public double McmShortRatio {
        get { return mcmShortRatio_; }
      }
      
      public const int MmLongRatioFieldNumber = 12;
      private bool hasMmLongRatio;
      private double mmLongRatio_;
      public bool HasMmLongRatio {
        get { return hasMmLongRatio; }
      }
      public double MmLongRatio {
        get { return mmLongRatio_; }
      }
      
      public const int MmShortRatioFieldNumber = 13;
      private bool hasMmShortRatio;
      private double mmShortRatio_;
      public bool HasMmShortRatio {
        get { return hasMmShortRatio; }
      }
      public double MmShortRatio {
        get { return mmShortRatio_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasSecurity) return false;
          if (!Security.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _marginRatioInfoFieldNames;
        if (hasSecurity) {
          output.WriteMessage(1, field_names[10], Security);
        }
        if (hasIsLongPermit) {
          output.WriteBool(2, field_names[4], IsLongPermit);
        }
        if (hasIsShortPermit) {
          output.WriteBool(3, field_names[5], IsShortPermit);
        }
        if (hasShortPoolRemain) {
          output.WriteDouble(4, field_names[12], ShortPoolRemain);
        }
        if (hasShortFeeRate) {
          output.WriteDouble(5, field_names[11], ShortFeeRate);
        }
        if (hasAlertLongRatio) {
          output.WriteDouble(6, field_names[0], AlertLongRatio);
        }
        if (hasAlertShortRatio) {
          output.WriteDouble(7, field_names[1], AlertShortRatio);
        }
        if (hasImLongRatio) {
          output.WriteDouble(8, field_names[2], ImLongRatio);
        }
        if (hasImShortRatio) {
          output.WriteDouble(9, field_names[3], ImShortRatio);
        }
        if (hasMcmLongRatio) {
          output.WriteDouble(10, field_names[6], McmLongRatio);
        }
        if (hasMcmShortRatio) {
          output.WriteDouble(11, field_names[7], McmShortRatio);
        }
        if (hasMmLongRatio) {
          output.WriteDouble(12, field_names[8], MmLongRatio);
        }
        if (hasMmShortRatio) {
          output.WriteDouble(13, field_names[9], MmShortRatio);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSecurity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Security);
        }
        if (hasIsLongPermit) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsLongPermit);
        }
        if (hasIsShortPermit) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsShortPermit);
        }
        if (hasShortPoolRemain) {
          size += pb::CodedOutputStream.ComputeDoubleSize(4, ShortPoolRemain);
        }
        if (hasShortFeeRate) {
          size += pb::CodedOutputStream.ComputeDoubleSize(5, ShortFeeRate);
        }
        if (hasAlertLongRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(6, AlertLongRatio);
        }
        if (hasAlertShortRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(7, AlertShortRatio);
        }
        if (hasImLongRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(8, ImLongRatio);
        }
        if (hasImShortRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(9, ImShortRatio);
        }
        if (hasMcmLongRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(10, McmLongRatio);
        }
        if (hasMcmShortRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(11, McmShortRatio);
        }
        if (hasMmLongRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(12, MmLongRatio);
        }
        if (hasMmShortRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(13, MmShortRatio);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static MarginRatioInfo ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static MarginRatioInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static MarginRatioInfo ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static MarginRatioInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static MarginRatioInfo ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static MarginRatioInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static MarginRatioInfo ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static MarginRatioInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static MarginRatioInfo ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static MarginRatioInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private MarginRatioInfo MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(MarginRatioInfo prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<MarginRatioInfo, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(MarginRatioInfo cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private MarginRatioInfo result;
        
        private MarginRatioInfo PrepareBuilder() {
          if (resultIsReadOnly) {
            MarginRatioInfo original = result;
            result = new MarginRatioInfo();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override MarginRatioInfo MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.Descriptor; }
        }
        
        public override MarginRatioInfo DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.DefaultInstance; }
        }
        
        public override MarginRatioInfo BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is MarginRatioInfo) {
            return MergeFrom((MarginRatioInfo) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(MarginRatioInfo other) {
          if (other == global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasSecurity) {
            MergeSecurity(other.Security);
          }
          if (other.HasIsLongPermit) {
            IsLongPermit = other.IsLongPermit;
          }
          if (other.HasIsShortPermit) {
            IsShortPermit = other.IsShortPermit;
          }
          if (other.HasShortPoolRemain) {
            ShortPoolRemain = other.ShortPoolRemain;
          }
          if (other.HasShortFeeRate) {
            ShortFeeRate = other.ShortFeeRate;
          }
          if (other.HasAlertLongRatio) {
            AlertLongRatio = other.AlertLongRatio;
          }
          if (other.HasAlertShortRatio) {
            AlertShortRatio = other.AlertShortRatio;
          }
          if (other.HasImLongRatio) {
            ImLongRatio = other.ImLongRatio;
          }
          if (other.HasImShortRatio) {
            ImShortRatio = other.ImShortRatio;
          }
          if (other.HasMcmLongRatio) {
            McmLongRatio = other.McmLongRatio;
          }
          if (other.HasMcmShortRatio) {
            McmShortRatio = other.McmShortRatio;
          }
          if (other.HasMmLongRatio) {
            MmLongRatio = other.MmLongRatio;
          }
          if (other.HasMmShortRatio) {
            MmShortRatio = other.MmShortRatio;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_marginRatioInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _marginRatioInfoFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasSecurity) {
                  subBuilder.MergeFrom(Security);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Security = subBuilder.BuildPartial();
                break;
              }
              case 16: {
                result.hasIsLongPermit = input.ReadBool(ref result.isLongPermit_);
                break;
              }
              case 24: {
                result.hasIsShortPermit = input.ReadBool(ref result.isShortPermit_);
                break;
              }
              case 33: {
                result.hasShortPoolRemain = input.ReadDouble(ref result.shortPoolRemain_);
                break;
              }
              case 41: {
                result.hasShortFeeRate = input.ReadDouble(ref result.shortFeeRate_);
                break;
              }
              case 49: {
                result.hasAlertLongRatio = input.ReadDouble(ref result.alertLongRatio_);
                break;
              }
              case 57: {
                result.hasAlertShortRatio = input.ReadDouble(ref result.alertShortRatio_);
                break;
              }
              case 65: {
                result.hasImLongRatio = input.ReadDouble(ref result.imLongRatio_);
                break;
              }
              case 73: {
                result.hasImShortRatio = input.ReadDouble(ref result.imShortRatio_);
                break;
              }
              case 81: {
                result.hasMcmLongRatio = input.ReadDouble(ref result.mcmLongRatio_);
                break;
              }
              case 89: {
                result.hasMcmShortRatio = input.ReadDouble(ref result.mcmShortRatio_);
                break;
              }
              case 97: {
                result.hasMmLongRatio = input.ReadDouble(ref result.mmLongRatio_);
                break;
              }
              case 105: {
                result.hasMmShortRatio = input.ReadDouble(ref result.mmShortRatio_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasSecurity {
         get { return result.hasSecurity; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security Security {
          get { return result.Security; }
          set { SetSecurity(value); }
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = value;
          return this;
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = builderForValue.Build();
          return this;
        }
        public Builder MergeSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasSecurity &&
              result.security_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.security_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.security_).MergeFrom(value).BuildPartial();
          } else {
            result.security_ = value;
          }
          result.hasSecurity = true;
          return this;
        }
        public Builder ClearSecurity() {
          PrepareBuilder();
          result.hasSecurity = false;
          result.security_ = null;
          return this;
        }
        
        public bool HasIsLongPermit {
          get { return result.hasIsLongPermit; }
        }
        public bool IsLongPermit {
          get { return result.IsLongPermit; }
          set { SetIsLongPermit(value); }
        }
        public Builder SetIsLongPermit(bool value) {
          PrepareBuilder();
          result.hasIsLongPermit = true;
          result.isLongPermit_ = value;
          return this;
        }
        public Builder ClearIsLongPermit() {
          PrepareBuilder();
          result.hasIsLongPermit = false;
          result.isLongPermit_ = false;
          return this;
        }
        
        public bool HasIsShortPermit {
          get { return result.hasIsShortPermit; }
        }
        public bool IsShortPermit {
          get { return result.IsShortPermit; }
          set { SetIsShortPermit(value); }
        }
        public Builder SetIsShortPermit(bool value) {
          PrepareBuilder();
          result.hasIsShortPermit = true;
          result.isShortPermit_ = value;
          return this;
        }
        public Builder ClearIsShortPermit() {
          PrepareBuilder();
          result.hasIsShortPermit = false;
          result.isShortPermit_ = false;
          return this;
        }
        
        public bool HasShortPoolRemain {
          get { return result.hasShortPoolRemain; }
        }
        public double ShortPoolRemain {
          get { return result.ShortPoolRemain; }
          set { SetShortPoolRemain(value); }
        }
        public Builder SetShortPoolRemain(double value) {
          PrepareBuilder();
          result.hasShortPoolRemain = true;
          result.shortPoolRemain_ = value;
          return this;
        }
        public Builder ClearShortPoolRemain() {
          PrepareBuilder();
          result.hasShortPoolRemain = false;
          result.shortPoolRemain_ = 0D;
          return this;
        }
        
        public bool HasShortFeeRate {
          get { return result.hasShortFeeRate; }
        }
        public double ShortFeeRate {
          get { return result.ShortFeeRate; }
          set { SetShortFeeRate(value); }
        }
        public Builder SetShortFeeRate(double value) {
          PrepareBuilder();
          result.hasShortFeeRate = true;
          result.shortFeeRate_ = value;
          return this;
        }
        public Builder ClearShortFeeRate() {
          PrepareBuilder();
          result.hasShortFeeRate = false;
          result.shortFeeRate_ = 0D;
          return this;
        }
        
        public bool HasAlertLongRatio {
          get { return result.hasAlertLongRatio; }
        }
        public double AlertLongRatio {
          get { return result.AlertLongRatio; }
          set { SetAlertLongRatio(value); }
        }
        public Builder SetAlertLongRatio(double value) {
          PrepareBuilder();
          result.hasAlertLongRatio = true;
          result.alertLongRatio_ = value;
          return this;
        }
        public Builder ClearAlertLongRatio() {
          PrepareBuilder();
          result.hasAlertLongRatio = false;
          result.alertLongRatio_ = 0D;
          return this;
        }
        
        public bool HasAlertShortRatio {
          get { return result.hasAlertShortRatio; }
        }
        public double AlertShortRatio {
          get { return result.AlertShortRatio; }
          set { SetAlertShortRatio(value); }
        }
        public Builder SetAlertShortRatio(double value) {
          PrepareBuilder();
          result.hasAlertShortRatio = true;
          result.alertShortRatio_ = value;
          return this;
        }
        public Builder ClearAlertShortRatio() {
          PrepareBuilder();
          result.hasAlertShortRatio = false;
          result.alertShortRatio_ = 0D;
          return this;
        }
        
        public bool HasImLongRatio {
          get { return result.hasImLongRatio; }
        }
        public double ImLongRatio {
          get { return result.ImLongRatio; }
          set { SetImLongRatio(value); }
        }
        public Builder SetImLongRatio(double value) {
          PrepareBuilder();
          result.hasImLongRatio = true;
          result.imLongRatio_ = value;
          return this;
        }
        public Builder ClearImLongRatio() {
          PrepareBuilder();
          result.hasImLongRatio = false;
          result.imLongRatio_ = 0D;
          return this;
        }
        
        public bool HasImShortRatio {
          get { return result.hasImShortRatio; }
        }
        public double ImShortRatio {
          get { return result.ImShortRatio; }
          set { SetImShortRatio(value); }
        }
        public Builder SetImShortRatio(double value) {
          PrepareBuilder();
          result.hasImShortRatio = true;
          result.imShortRatio_ = value;
          return this;
        }
        public Builder ClearImShortRatio() {
          PrepareBuilder();
          result.hasImShortRatio = false;
          result.imShortRatio_ = 0D;
          return this;
        }
        
        public bool HasMcmLongRatio {
          get { return result.hasMcmLongRatio; }
        }
        public double McmLongRatio {
          get { return result.McmLongRatio; }
          set { SetMcmLongRatio(value); }
        }
        public Builder SetMcmLongRatio(double value) {
          PrepareBuilder();
          result.hasMcmLongRatio = true;
          result.mcmLongRatio_ = value;
          return this;
        }
        public Builder ClearMcmLongRatio() {
          PrepareBuilder();
          result.hasMcmLongRatio = false;
          result.mcmLongRatio_ = 0D;
          return this;
        }
        
        public bool HasMcmShortRatio {
          get { return result.hasMcmShortRatio; }
        }
        public double McmShortRatio {
          get { return result.McmShortRatio; }
          set { SetMcmShortRatio(value); }
        }
        public Builder SetMcmShortRatio(double value) {
          PrepareBuilder();
          result.hasMcmShortRatio = true;
          result.mcmShortRatio_ = value;
          return this;
        }
        public Builder ClearMcmShortRatio() {
          PrepareBuilder();
          result.hasMcmShortRatio = false;
          result.mcmShortRatio_ = 0D;
          return this;
        }
        
        public bool HasMmLongRatio {
          get { return result.hasMmLongRatio; }
        }
        public double MmLongRatio {
          get { return result.MmLongRatio; }
          set { SetMmLongRatio(value); }
        }
        public Builder SetMmLongRatio(double value) {
          PrepareBuilder();
          result.hasMmLongRatio = true;
          result.mmLongRatio_ = value;
          return this;
        }
        public Builder ClearMmLongRatio() {
          PrepareBuilder();
          result.hasMmLongRatio = false;
          result.mmLongRatio_ = 0D;
          return this;
        }
        
        public bool HasMmShortRatio {
          get { return result.hasMmShortRatio; }
        }
        public double MmShortRatio {
          get { return result.MmShortRatio; }
          set { SetMmShortRatio(value); }
        }
        public Builder SetMmShortRatio(double value) {
          PrepareBuilder();
          result.hasMmShortRatio = true;
          result.mmShortRatio_ = value;
          return this;
        }
        public Builder ClearMmShortRatio() {
          PrepareBuilder();
          result.hasMmShortRatio = false;
          result.mmShortRatio_ = 0D;
          return this;
        }
      }
      static MarginRatioInfo() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.TrdGetMarginRatio.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "header", "securityList" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 10, 18 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_C2S__FieldAccessorTable; }
      }
      
      public const int HeaderFieldNumber = 1;
      private bool hasHeader;
      private global::Futu.OpenApi.Pb.TrdCommon.TrdHeader header_;
      public bool HasHeader {
        get { return hasHeader; }
      }
      public global::Futu.OpenApi.Pb.TrdCommon.TrdHeader Header {
        get { return header_ ?? global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.DefaultInstance; }
      }
      
      public const int SecurityListFieldNumber = 2;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> securityList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security>();
      public scg::IList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
        get { return securityList_; }
      }
      public int SecurityListCount {
        get { return securityList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
        return securityList_[index];
      }
      
      public override bool IsInitialized {
        get {
          if (!hasHeader) return false;
          if (!Header.IsInitialized) return false;
          foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (hasHeader) {
          output.WriteMessage(1, field_names[0], Header);
        }
        if (securityList_.Count > 0) {
          output.WriteMessageArray(2, field_names[1], securityList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHeader) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Header);
        }
        foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        securityList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasHeader) {
            MergeHeader(other.Header);
          }
          if (other.securityList_.Count != 0) {
            result.securityList_.Add(other.securityList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.Builder subBuilder = global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.CreateBuilder();
                if (result.hasHeader) {
                  subBuilder.MergeFrom(Header);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Header = subBuilder.BuildPartial();
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.securityList_, global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasHeader {
         get { return result.hasHeader; }
        }
        public global::Futu.OpenApi.Pb.TrdCommon.TrdHeader Header {
          get { return result.Header; }
          set { SetHeader(value); }
        }
        public Builder SetHeader(global::Futu.OpenApi.Pb.TrdCommon.TrdHeader value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasHeader = true;
          result.header_ = value;
          return this;
        }
        public Builder SetHeader(global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasHeader = true;
          result.header_ = builderForValue.Build();
          return this;
        }
        public Builder MergeHeader(global::Futu.OpenApi.Pb.TrdCommon.TrdHeader value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasHeader &&
              result.header_ != global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.DefaultInstance) {
              result.header_ = global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.CreateBuilder(result.header_).MergeFrom(value).BuildPartial();
          } else {
            result.header_ = value;
          }
          result.hasHeader = true;
          return this;
        }
        public Builder ClearHeader() {
          PrepareBuilder();
          result.hasHeader = false;
          result.header_ = null;
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
          get { return PrepareBuilder().securityList_; }
        }
        public int SecurityListCount {
          get { return result.SecurityListCount; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
          return result.GetSecurityList(index);
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_[index] = value;
          return this;
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_.Add(value);
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeSecurityList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotCommon.Security> values) {
          PrepareBuilder();
          result.securityList_.Add(values);
          return this;
        }
        public Builder ClearSecurityList() {
          PrepareBuilder();
          result.securityList_.Clear();
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.TrdGetMarginRatio.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "header", "marginRatioInfoList" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 10, 18 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_S2C__FieldAccessorTable; }
      }
      
      public const int HeaderFieldNumber = 1;
      private bool hasHeader;
      private global::Futu.OpenApi.Pb.TrdCommon.TrdHeader header_;
      public bool HasHeader {
        get { return hasHeader; }
      }
      public global::Futu.OpenApi.Pb.TrdCommon.TrdHeader Header {
        get { return header_ ?? global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.DefaultInstance; }
      }
      
      public const int MarginRatioInfoListFieldNumber = 2;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo> marginRatioInfoList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo>();
      public scg::IList<global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo> MarginRatioInfoListList {
        get { return marginRatioInfoList_; }
      }
      public int MarginRatioInfoListCount {
        get { return marginRatioInfoList_.Count; }
      }
      public global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo GetMarginRatioInfoList(int index) {
        return marginRatioInfoList_[index];
      }
      
      public override bool IsInitialized {
        get {
          if (!hasHeader) return false;
          if (!Header.IsInitialized) return false;
          foreach (global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo element in MarginRatioInfoListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (hasHeader) {
          output.WriteMessage(1, field_names[0], Header);
        }
        if (marginRatioInfoList_.Count > 0) {
          output.WriteMessageArray(2, field_names[1], marginRatioInfoList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHeader) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Header);
        }
        foreach (global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo element in MarginRatioInfoListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        marginRatioInfoList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasHeader) {
            MergeHeader(other.Header);
          }
          if (other.marginRatioInfoList_.Count != 0) {
            result.marginRatioInfoList_.Add(other.marginRatioInfoList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.Builder subBuilder = global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.CreateBuilder();
                if (result.hasHeader) {
                  subBuilder.MergeFrom(Header);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Header = subBuilder.BuildPartial();
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.marginRatioInfoList_, global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasHeader {
         get { return result.hasHeader; }
        }
        public global::Futu.OpenApi.Pb.TrdCommon.TrdHeader Header {
          get { return result.Header; }
          set { SetHeader(value); }
        }
        public Builder SetHeader(global::Futu.OpenApi.Pb.TrdCommon.TrdHeader value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasHeader = true;
          result.header_ = value;
          return this;
        }
        public Builder SetHeader(global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasHeader = true;
          result.header_ = builderForValue.Build();
          return this;
        }
        public Builder MergeHeader(global::Futu.OpenApi.Pb.TrdCommon.TrdHeader value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasHeader &&
              result.header_ != global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.DefaultInstance) {
              result.header_ = global::Futu.OpenApi.Pb.TrdCommon.TrdHeader.CreateBuilder(result.header_).MergeFrom(value).BuildPartial();
          } else {
            result.header_ = value;
          }
          result.hasHeader = true;
          return this;
        }
        public Builder ClearHeader() {
          PrepareBuilder();
          result.hasHeader = false;
          result.header_ = null;
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo> MarginRatioInfoListList {
          get { return PrepareBuilder().marginRatioInfoList_; }
        }
        public int MarginRatioInfoListCount {
          get { return result.MarginRatioInfoListCount; }
        }
        public global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo GetMarginRatioInfoList(int index) {
          return result.GetMarginRatioInfoList(index);
        }
        public Builder SetMarginRatioInfoList(int index, global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.marginRatioInfoList_[index] = value;
          return this;
        }
        public Builder SetMarginRatioInfoList(int index, global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.marginRatioInfoList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddMarginRatioInfoList(global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.marginRatioInfoList_.Add(value);
          return this;
        }
        public Builder AddMarginRatioInfoList(global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.marginRatioInfoList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeMarginRatioInfoList(scg::IEnumerable<global::Futu.OpenApi.Pb.TrdGetMarginRatio.MarginRatioInfo> values) {
          PrepareBuilder();
          result.marginRatioInfoList_.Add(values);
          return this;
        }
        public Builder ClearMarginRatioInfoList() {
          PrepareBuilder();
          result.marginRatioInfoList_.Clear();
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.TrdGetMarginRatio.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          if (!C2S.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.TrdGetMarginRatio.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.TrdGetMarginRatio.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.TrdGetMarginRatio.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.internal__static_Trd_GetMarginRatio_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.TrdGetMarginRatio.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.TrdGetMarginRatio.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.TrdGetMarginRatio.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.TrdGetMarginRatio.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
